[{"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/index.js":"1","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/reportWebVitals.js":"2","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/App.js":"3","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/SignUp.js":"4","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/Home.js":"5","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/Context/UserContext.js":"6","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/PrivateRoute.js":"7","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/Login.js":"8","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/Context/FeedContext.js":"9","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/NavSection.js":"10","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/AddFeed.js":"11","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/ReadLater.js":"12","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/Context/CardContext.js":"13","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/FeedCategoryForm.js":"14","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/TodayView.js":"15","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/SideBar.js":"16","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/EditFeed.js":"17","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/FeedInfoCard.js":"18","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/CardView.js":"19","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/FollowPopUp.js":"20"},{"size":457,"mtime":1607860193428,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1607860193428,"results":"23","hashOfConfig":"22"},{"size":805,"mtime":1608033916597,"results":"24","hashOfConfig":"22"},{"size":3955,"mtime":1607860193427,"results":"25","hashOfConfig":"22"},{"size":1742,"mtime":1607860193426,"results":"26","hashOfConfig":"22"},{"size":2205,"mtime":1607860193424,"results":"27","hashOfConfig":"22"},{"size":588,"mtime":1607860193426,"results":"28","hashOfConfig":"22"},{"size":3835,"mtime":1608033916603,"results":"29","hashOfConfig":"22"},{"size":4441,"mtime":1608191634532,"results":"30","hashOfConfig":"22"},{"size":2011,"mtime":1607860193426,"results":"31","hashOfConfig":"22"},{"size":1803,"mtime":1607860193424,"results":"32","hashOfConfig":"22"},{"size":881,"mtime":1607860193426,"results":"33","hashOfConfig":"22"},{"size":1364,"mtime":1607864453470,"results":"34","hashOfConfig":"22"},{"size":2173,"mtime":1608033916602,"results":"35","hashOfConfig":"22"},{"size":894,"mtime":1608190154888,"results":"36","hashOfConfig":"22"},{"size":6003,"mtime":1608190038958,"results":"37","hashOfConfig":"22"},{"size":3932,"mtime":1608033916600,"results":"38","hashOfConfig":"22"},{"size":1936,"mtime":1607860193425,"results":"39","hashOfConfig":"22"},{"size":2840,"mtime":1608033916598,"results":"40","hashOfConfig":"22"},{"size":2752,"mtime":1608033916603,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1qnbwpt",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/index.js",[],["88","89"],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/reportWebVitals.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/App.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/SignUp.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/Home.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/Context/UserContext.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/PrivateRoute.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/Login.js",["90"],"import {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\nimport React from 'react';\nimport {UserContext} from '../Context/UserContext';\nimport {FeedContext} from '../Context/FeedContext';\n\nconst { Button, Grid, Typography, TextField, Avatar } = require(\"@material-ui/core\");\nconst { Redirect } = require(\"react-router-dom\");\n\n\nconst theme = createMuiTheme({\n    typography:{\n      h3: {\n        color: 'green',\n        fontWeight: 'bold',\n        marginBottom: 15\n      },\n      subtitle2: {\n        color: 'gray',\n        marginBottom:15\n      },\n      subtitle1: {\n        fontWeight: 'bold',\n        marginBottom: 10\n        }\n    }\n    \n})\n\n\nconst Login = () => {\n    const [loginCred, setLoginCred] = React.useState({\n        username: null,\n        password: null\n    })\n\n    const {auth, login, isRegistered} = React.useContext(UserContext);\n\n\n    if (auth.isAuthenticated){\n        return <Redirect to='/home' />\n    }\n    \n    const handleChange = (e) => {\n        setLoginCred(prev => ({...prev, [e.target.id]:e.target.value}));\n    }\n    \n    const handleLogin = (e) => {\n        e.preventDefault();\n        console.log('from handlelogin=== ',e );\n        login(loginCred);\n    }\n    return(\n        <ThemeProvider theme={theme}>\n        <div>\n            <Grid container style={{padding:'15vw'}} spacing={4}>\n                <Grid item xs={1}>\n                    <Avatar src='/Feeds-Green-icon.png' />\n                </Grid>\n                <Grid item container xs={7} direction='column'>\n                    <Grid item>\n                        <Typography variant='h3'>Welcome to RSS Feed Reader</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant='h6'>\n                            Keep up with the topics and trends you care about, without the overwhelm\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Grid item container xs={4} direction='column'>\n                    {isRegistered? <Typography variant='subtitle2' style={{backgroundColor: 'lightgreen', color:\"black\"}} >Succesfully Registered</Typography> : <div />}\n                    <Typography variant='subtitle1'>Login to your Account</Typography>\n                    <form onSubmit={handleLogin}>\n                    <TextField \n                        variant=\"outlined\"\n                        color='secondary'\n                        label='Email'\n                        type='email'\n                        placeholder='test@test.com'\n                        style={{marginBottom:15}}\n                        id='username'\n                        onChange={handleChange}\n                    />\n                    <TextField \n                        variant=\"outlined\"\n                        color='secondary'\n                        label='Password'\n                        type='password'\n                        style={{marginBottom:15}}\n                        id='password'\n                        onChange={handleChange}\n                    />\n                    <br />\n                    <Button type='submit' variant='filled' style={{color: 'white', backgroundColor:'green', marginBottom:15}}> \n                        Log In \n                    </Button>\n                    </form>\n                    <a href='/#'>\n                        <Typography variant='subtitle2'>Forgot your Password?</Typography>\n                    </a>\n                    <a href='/register'>\n                        <Typography variant='subtitle2'>Don't have an Account yet?</Typography>\n                    </a>\n                    \n                </Grid>\n                <Grid item>\n                   \n                </Grid>\n            </Grid>\n        </div>\n        </ThemeProvider>\n    )\n}\n\nexport default Login;","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/Context/FeedContext.js",["91"],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/NavSection.js",["92"],"import React from 'react';\nimport { Button, Grid, IconButton, Menu, MenuItem } from  '@material-ui/core'\nimport { AccountCircle, AddCircle } from '@material-ui/icons'\nimport {Link} from 'react-router-dom';\nimport {FeedContext} from '../Context/FeedContext';\nimport { UserContext } from '../Context/UserContext';\n\n\nconst NavSection = () => {\n    const { logout } = React.useContext(UserContext);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const menuItem = [\n        {id:1,\n        name:'Logout',\n        onclick: () => {\n            console.log('clicked logout');\n            logout();\n        }\n    }\n    ]\n    const {fetchFeed, fetchUserSources} = React.useContext(FeedContext);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleRoute = () => {\n        fetchFeed();\n    }\n\n    const menuList = menuItem.map(item => {\n        return (\n            <MenuItem key={item.id} component={Link} onClick={item.onclick} to='/'>{item.name}</MenuItem>\n        )\n    });\n\n    return (\n        <Grid container justify='flex-end' spacing={1} style={{paddingTop: 10}}>\n            <Grid item>\n                <Link to='/addfeed'>\n                    <Button startIcon={<AddCircle />} style={{marginTop: 5}} onClick={handleRoute}>\n                        Add New RSS Feed\n                    </Button>\n                </Link>          \n            </Grid>\n            <Grid item>\n                <IconButton onClick={handleClick}>\n                    <AccountCircle />\n                </IconButton>\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    {menuList}\n                </Menu>\n            </Grid>\n            \n            \n        </Grid>\n    )\n}\n\nexport default NavSection\n","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/AddFeed.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/ReadLater.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/Context/CardContext.js",["93"],"import React from 'react';\nimport {UserContext} from './UserContext';\n\nexport const CardContext = React.createContext();\n\nconst BASE_URL = 'http://127.0.0.1:8000';\n\n\nfunction CardContextProvider(props) {\n    const [content, setContent] = React.useState([]);\n\n    const [bookmarkedContent, setBookmarkedContent] = React.useState([]);\n    const [bookmarkClicked, setBookmarkClicked] = React.useState([]);\n    const {auth} = React.useContext(UserContext);\n\n    React.useEffect(() => {\n        fetchArticles();\n    }, [])\n\n\n    async function fetchArticles(){\n        const requestOptions = {\n            method: 'GET',\n            headers: {'Authorization': `Token ${auth.token}`}\n        }\n\n        fetch(`${BASE_URL}/api/feed/article`, requestOptions)\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n                setContent(data);\n            }).catch(err => console.log(err));\n    }\n\n    return (\n        <CardContext.Provider \n            value={{\n                content,\n                setContent,\n                bookmarkedContent, \n                setBookmarkedContent, \n                bookmarkClicked, \n                setBookmarkClicked, \n                fetchArticles\n            }}\n        >\n            {props.children}\n        </CardContext.Provider>\n    )\n\n}\n\nexport default CardContextProvider;","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/FeedCategoryForm.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/TodayView.js",["94","95"],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/SideBar.js",["96"],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/EditFeed.js",["97"],"import { Avatar, Divider, Grid, Button, FormControl, Select, InputLabel, Input, InputAdornment } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React from 'react';\nimport {FeedContext} from '../Context/FeedContext'\n\n\nfunction EditFeed() {\n    const {folderFeeds, userSources, unfollowFeed} = React.useContext(FeedContext);\n    const [displayValues, setDisplayValues] = React.useState(folderFeeds);\n    console.log(userSources);\n\n    const handleChange = (e) => {\n        const opt = e.target.value;\n        if(opt !== 'All'){\n            const newDisplayValues = folderFeeds.length ? folderFeeds.filter(d => d.folder === e.target.value) : []\n            setDisplayValues(newDisplayValues);\n            console.log(displayValues);\n        }else{\n            setDisplayValues(folderFeeds);\n            console.log(displayValues);\n        } \n        \n        \n    }\n\n    React.useEffect(() => {\n        console.log('EditFeed useEffect called!!!');\n    }, [userSources])\n\n    const handleUnfollow = (id) => {\n        unfollowFeed(id);\n    }\n\n    const followingList = userSources.length ? (userSources.map( source => {\n        return (\n            <Grid container direction='column' key={source.id} style={{marginTop: 10}}>\n                {/* <Grid item style={{marginBottom: 10}}>\n                    <h2>{folderFeed.folder}</h2>\n                </Grid>\n                <Grid item>\n                    <Divider />\n                </Grid> */}\n                \n                        <Grid item container style={{paddingLeft: '5vw', padding:20}} spacing={2} >\n                            <Grid item xs={1}><Avatar variant='rounded' src={source.source.logo_link} style={{height: 50, width:50}} /> </Grid> \n                            <Grid item xs={8}><p>{source.source.title}</p></Grid>\n                            <Grid item xs={3}>\n                                <Button variant='outlined' onClick={() => handleUnfollow(source.source.id)}> Unfollow </Button>\n                            </Grid>\n                        </Grid>\n            </Grid>\n        )\n    })) : (<div></div>)\n\n    return (\n        <div className=\"editFeed\">\n            <h1>Organize Your Sources</h1>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <FormControl variant='outlined'>\n                        <InputLabel htmlFor=\"outlined-age-native-simple\">Folder</InputLabel>\n                        <Select\n                        native\n                        label=\"Folder\"\n                        onChange={handleChange}\n                        inputProps={{\n                            name: 'folder',\n                            id: 'outlined-age-native-simple',\n                        }}\n                        style={{width: 150}}\n                        >\n                        <option aria-label=\"All\" value=\"All\">All </option>\n                        {folderFeeds.map(f => {\n                            return (\n                                <option aria-label={f.folder} value={f.folder} key={f.folder}>{f.folder}</option>\n                            )\n                        })}\n                        \n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item>\n                    <form>\n                        <Input\n                        id=\"search-bar\"\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                            <SearchIcon />\n                            </InputAdornment>\n                        }\n                        style={{marginTop:15, width:'30vw'}}\n                        placeholder='Search'\n                        \n                        />\n                    </form>\n                </Grid>\n            </Grid>\n            \n            {followingList}\n        </div>\n    )\n}\n\nexport default EditFeed;","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/FeedInfoCard.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/CardView.js",["98","99","100"],"import { Grid, makeStyles, Avatar, IconButton} from '@material-ui/core';\nimport { Card, CardHeader, CardMedia, CardActions, CardContent } from '@material-ui/core';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport { red } from '@material-ui/core/colors';\nimport { CardContext } from '../Context/CardContext';\n\n\nimport React from 'react';\nimport { FeedContext } from '../Context/FeedContext';\n\nconst useStyles = makeStyles({\n    cardRoot: {\n        maxWidth: '100vw',\n        marginBottom: 25,\n      },\n    media: {\n        height: 140,\n    }\n})\n\nfunction CardView(props) {\n    const classes = useStyles();\n    const contents = props.content;\n    const {content, bookmarkedContent, fetchArticles, setBookmarkedContent, bookmarkClicked, setBookmarkClicked} = React.useContext(CardContext);\n    const { userSources } = React.useContext(FeedContext);\n\n    React.useEffect(() => {\n        console.log('Cardview useffect')\n        fetchArticles()\n    }, [userSources])\n\n\n\n    const handleBookmark = (id) => {\n        const toBookmark = content.filter(c => c.id === id)\n\n        setBookmarkClicked(bClicked => ({\n            clicked: !bClicked.clicked,\n            clickId: id\n        }));\n        setBookmarkedContent(prevContent => [...prevContent, toBookmark]);\n        console.log(bookmarkedContent);\n    }\n    const cardList = contents.map(e => {\n        return(\n            <Grid item key={e.id}>\n                <Card className={classes.cardRoot}>\n                    <CardHeader\n                        avatar={\n                        <Avatar src={e.source.source_logo} variant='rounded' />\n                        }\n                        title={e.title}\n                        subheader={e.published_date + ' | ' + e.source.source_name}\n                    />\n                    {/* <CardMedia\n                        className={classes.media}\n                        image={e.image}\n                    /> */}\n                    <CardContent dangerouslySetInnerHTML={{__html: e.summary}}>\n                    </CardContent>\n                    <CardActions disableSpacing>\n                        <IconButton aria-label=\"add to favorites\" onClick={() => {handleBookmark(e.id)}}>\n                            {bookmarkClicked.clicked && bookmarkClicked.clickId === e.id ? <BookmarkIcon /> : \n                            <BookmarkBorderIcon />}\n                        </IconButton>\n                        <a href={e.link}>\n                            <h5>Read More...</h5>\n                        </a>\n                    </CardActions>\n                </Card>\n            </Grid>\n            \n        )\n    })\n\n    return (\n            <Grid item container spacing={4}>\n                {cardList}\n            </Grid>\n    )\n}\n\nexport default CardView;","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/FollowPopUp.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":4,"column":9,"nodeType":"107","messageId":"108","endLine":4,"endColumn":20},{"ruleId":"105","severity":1,"message":"109","line":14,"column":25,"nodeType":"107","messageId":"108","endLine":14,"endColumn":39},{"ruleId":"105","severity":1,"message":"110","line":21,"column":23,"nodeType":"107","messageId":"108","endLine":21,"endColumn":39},{"ruleId":"111","severity":1,"message":"112","line":18,"column":8,"nodeType":"113","endLine":18,"endColumn":10,"suggestions":"114"},{"ruleId":"105","severity":1,"message":"115","line":15,"column":21,"nodeType":"107","messageId":"108","endLine":15,"endColumn":25},{"ruleId":"111","severity":1,"message":"116","line":21,"column":7,"nodeType":"113","endLine":21,"endColumn":9,"suggestions":"117"},{"ruleId":"105","severity":1,"message":"118","line":37,"column":26,"nodeType":"107","messageId":"108","endLine":37,"endColumn":37},{"ruleId":"105","severity":1,"message":"119","line":1,"column":18,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"120","line":2,"column":28,"nodeType":"107","messageId":"108","endLine":2,"endColumn":37},{"ruleId":"105","severity":1,"message":"121","line":5,"column":10,"nodeType":"107","messageId":"108","endLine":5,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":31,"column":8,"nodeType":"113","endLine":31,"endColumn":21,"suggestions":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'FeedContext' is defined but never used.","Identifier","unusedVar","'setFolderFeeds' is assigned a value but never used.","'fetchUserSources' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'fetchArticles'. Either include it or remove the dependency array.","ArrayExpression",["125"],"'auth' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'fetchUserSources'. Either include it or remove the dependency array.",["126"],"'folderFeeds' is assigned a value but never used.","'Divider' is defined but never used.","'CardMedia' is defined but never used.","'red' is defined but never used.",["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [fetchArticles]",{"range":"134","text":"135"},"Update the dependencies array to be: [fetchUserSources]",{"range":"136","text":"137"},"Update the dependencies array to be: [fetchArticles, userSources]",{"range":"138","text":"139"},[514,516],"[fetchArticles]",[592,594],"[fetchUserSources]",[1029,1042],"[fetchArticles, userSources]"]