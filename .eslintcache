[{"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\index.js":"1","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\reportWebVitals.js":"2","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\App.js":"3","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\PrivateRoute.js":"4","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\Home.js":"5","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\Context\\UserContext.js":"6","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\Context\\FeedContext.js":"7","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\SignUp.js":"8","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\Login.js":"9","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\Context\\CardContext.js":"10","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\SideBar.js":"11","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\TodayView.js":"12","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\EditFeed.js":"13","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\ReadLater.js":"14","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\NavSection.js":"15","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\FeedCategoryForm.js":"16","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\AddFeed.js":"17","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\CardView.js":"18","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\BookmarkedCard.js":"19","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\FeedInfoCard.js":"20","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\FollowPopUp.js":"21","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\SendEmail.js":"22","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\ResetPassword.js":"23","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\PaginationButtons.js":"24"},{"size":457,"mtime":1607240141872,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":1045,"mtime":1608357494342,"results":"28","hashOfConfig":"26"},{"size":611,"mtime":1607439525595,"results":"29","hashOfConfig":"26"},{"size":1885,"mtime":1608361997951,"results":"30","hashOfConfig":"26"},{"size":2634,"mtime":1608362345249,"results":"31","hashOfConfig":"26"},{"size":4744,"mtime":1608301433174,"results":"32","hashOfConfig":"26"},{"size":4072,"mtime":1607439361320,"results":"33","hashOfConfig":"26"},{"size":4793,"mtime":1608362345315,"results":"34","hashOfConfig":"26"},{"size":2948,"mtime":1608362345379,"results":"35","hashOfConfig":"26"},{"size":6353,"mtime":1608359784201,"results":"36","hashOfConfig":"26"},{"size":1508,"mtime":1608364650530,"results":"37","hashOfConfig":"26"},{"size":4936,"mtime":1608306684147,"results":"38","hashOfConfig":"26"},{"size":1067,"mtime":1608035853704,"results":"39","hashOfConfig":"26"},{"size":2062,"mtime":1608305598531,"results":"40","hashOfConfig":"26"},{"size":2244,"mtime":1608292894501,"results":"41","hashOfConfig":"26"},{"size":2063,"mtime":1608296998420,"results":"42","hashOfConfig":"26"},{"size":3297,"mtime":1608362345348,"results":"43","hashOfConfig":"26"},{"size":2762,"mtime":1608036430680,"results":"44","hashOfConfig":"26"},{"size":2518,"mtime":1608302172664,"results":"45","hashOfConfig":"26"},{"size":3039,"mtime":1608305693504,"results":"46","hashOfConfig":"26"},{"size":2148,"mtime":1608357175849,"results":"47","hashOfConfig":"26"},{"size":2439,"mtime":1608357443559,"results":"48","hashOfConfig":"26"},{"size":809,"mtime":1608364551463,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"abr5tk",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\index.js",[],["107","108"],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\reportWebVitals.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\App.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\PrivateRoute.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\Home.js",["109"],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\Context\\UserContext.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\Context\\FeedContext.js",["110"],"import React, {useState, createContext} from 'react';\r\nimport {UserContext} from './UserContext';\r\n\r\nexport const FeedContext = createContext();\r\n\r\n\r\nconst BASE_URL = 'http://127.0.0.1:8000';\r\n\r\nfunction FeedContextProvider(props) {\r\n    const [feedCategory, setFeedCategory] = useState([]);\r\n    const [feedInfo, setFeedInfo] = useState([]);\r\n    const [follow, setFollow] = useState(null);\r\n    const [unfollow, setUnfollow] = useState(null);\r\n    const [folderFeeds, setFolderFeeds] = useState([]);\r\n    const {auth} = React.useContext(UserContext);\r\n    const [userSources, setUserSources] = useState([]);\r\n   \r\n\r\n    function getFeedFolder(){\r\n        const feeds = folderFeeds.map(folderFeed => {\r\n            const [feedFolder] = folderFeed.feeds.map(feed => ({folder: folderFeed.folder, feed: feed}))\r\n            return feedFolder\r\n        })\r\n\r\n        return feeds;\r\n    }\r\n\r\n    function getUserSourcesTitle(){\r\n        return userSources.length?userSources.map(s => s.source.title):[]\r\n    }\r\n\r\n    async function fetchFeed() {\r\n        console.log(auth);\r\n\r\n        const requestOptions = {\r\n            method: 'GET'\r\n        }\r\n\r\n        await fetch(`${BASE_URL}/api/live_feed/source/`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setFeedInfo(data);\r\n                console.log(feedInfo);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    async function followFeed(folder) {\r\n        console.log(auth);\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Token ${auth.token}` },\r\n        }\r\n        await fetch(`${BASE_URL}/api/feed/follow/${follow}/${folder}`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                fetchUserSources();\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n\r\n    async function fetchUserSources() {\r\n        console.log('FetchuserSources calledddd !!!!!!! ');\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {'Authorization': `Token ${auth.token}`}\r\n        }\r\n\r\n        fetch(`${BASE_URL}/api/feed/source`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log('USer sources data ===== ', data);\r\n                setUserSources(data);\r\n                let f = []\r\n                let folders = data.length>0 ? data.map(source => {\r\n                    if (!f.includes(source.folder)) {\r\n                        console.log('Inside the map function --------- ')\r\n                        f.push(source.folder);\r\n                        return source.folder;\r\n                    }\r\n                    else {\r\n                        return ''\r\n                    }\r\n                }) : []\r\n                const final = folders.filter(f1 => f1 !== '');\r\n                console.log('f === ', f)\r\n                console.log('finall ===== ', final);\r\n\r\n                setFeedCategory(final);\r\n            }).catch(err => console.log(err))\r\n\r\n        // const f = []\r\n        // const folders = userSources.length ? userSources.map(source => {\r\n        //     if (!f.includes(source.folder)){\r\n        //         f.push(source.folder);\r\n        //         return source.folder;\r\n        //     }\r\n        //     else{\r\n        //         return ''\r\n        //     }\r\n        // }):[]\r\n        // const final = folders.filter(f =>  f !== '');\r\n        // console.log('finall ===== ', final);\r\n\r\n        // setFeedCategory(final);\r\n\r\n    }\r\n\r\n    async function unfollowFeed(id) {\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: {'Authorization': `Token ${auth.token}`}\r\n        }\r\n\r\n        fetch(`${BASE_URL}/api/feed/unfollow/${id}`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res);\r\n                fetchUserSources();\r\n            })\r\n    }    \r\n    \r\n\r\n    return (\r\n        <FeedContext.Provider value={{\r\n            feedCategory, \r\n            setFeedCategory, \r\n            feedInfo, \r\n            setFeedInfo, \r\n            fetchFeed, \r\n            follow, \r\n            setFollow,\r\n            folderFeeds, \r\n            getFeedFolder, \r\n            userSources, \r\n            fetchUserSources, \r\n            unfollow, \r\n            setUnfollow,\r\n            followFeed,\r\n            unfollowFeed,\r\n            getUserSourcesTitle\r\n            }}\r\n        >\r\n            {props.children}\r\n        </FeedContext.Provider>\r\n    )\r\n}\r\n\r\nexport default FeedContextProvider;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\SignUp.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\Login.js",["111"],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\Context\\CardContext.js",["112"],"import React from 'react';\r\nimport {UserContext} from './UserContext';\r\n\r\nexport const CardContext = React.createContext();\r\n\r\nconst BASE_URL = 'http://127.0.0.1:8000';\r\n\r\n\r\nfunction CardContextProvider(props) {\r\n    const [content, setContent] = React.useState([]);\r\n\r\n    const [bookmarkedContent, setBookmarkedContent] = React.useState([]);\r\n    const [bookmarkClicked, setBookmarkClicked] = React.useState([]);\r\n    const {auth} = React.useContext(UserContext);\r\n\r\n    React.useEffect(() => {\r\n        fetchArticles();\r\n    }, [])\r\n\r\n\r\n    async function fetchArticles(){\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {'Authorization': `Token ${auth.token}`}\r\n        }\r\n\r\n        fetch(`${BASE_URL}/api/feed/article`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                data.sort((a,b) => new Date(b.published_date) - new Date(a.published_date));\r\n                setContent(data);\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    async function bookmarkArticle(id){\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json', 'Authorization': `Token ${auth.token}`}\r\n        }\r\n\r\n        fetch(`${BASE_URL}/api/feed/bookmark/add/${id}`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // console.log(data);\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    async function unbookmarkArticle(id){\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: {'Authorization': `Token ${auth.token}`}\r\n        }\r\n\r\n        fetch(`${BASE_URL}/api/feed/bookmark/remove/${id}`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    async function fetchBookmarkedArticles(){\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {'Authorization': `Token ${auth.token}`}\r\n        }\r\n\r\n        fetch(`${BASE_URL}/api/feed/bookmark`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setBookmarkedContent(data);\r\n            }).catch(err => console.log(err));\r\n    }\r\n    return (\r\n        <CardContext.Provider \r\n            value={{\r\n                content,\r\n                setContent,\r\n                bookmarkedContent, \r\n                setBookmarkedContent, \r\n                bookmarkClicked, \r\n                setBookmarkClicked, \r\n                fetchArticles,\r\n                bookmarkArticle,\r\n                fetchBookmarkedArticles,\r\n                unbookmarkArticle\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CardContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default CardContextProvider;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\SideBar.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\TodayView.js",["113"],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\EditFeed.js",["114","115"],"import { Avatar, Divider, Grid, Button, FormControl, Select, InputLabel, Input, InputAdornment } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport React from 'react';\r\nimport {FeedContext} from '../Context/FeedContext'\r\n\r\n\r\nfunction EditFeed() {\r\n    const {userSources, unfollowFeed, getFeedFolder, feedCategory} = React.useContext(FeedContext);\r\n    const [displayValues, setDisplayValues] = React.useState(userSources);\r\n    const [search, setSearch] = React.useState('');\r\n    console.log(userSources);\r\n\r\n    const handleChange = (e) => {\r\n        const opt = e.target.value;\r\n        if(opt !== 'All'){\r\n            const newDisplayValues = userSources.length ? userSources.filter(d => d.folder === opt) : []\r\n            setDisplayValues(newDisplayValues);\r\n            console.log(displayValues);\r\n        }else{\r\n            setDisplayValues(userSources);\r\n            console.log(displayValues);\r\n        } \r\n        \r\n        \r\n    }\r\n\r\n    const handleSearchChange = (e) => {\r\n        const s = e.target.value.toLowerCase();\r\n        setSearch(s);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setDisplayValues(userSources);\r\n        console.log('EditFeed useEffect called!!!');\r\n    }, [userSources])\r\n\r\n    const handleUnfollow = (id) => {\r\n        unfollowFeed(id);\r\n    }\r\n    console.log(getFeedFolder());\r\n    const followingList = displayValues.length ? (displayValues.filter( d => {\r\n        if(search === ''){\r\n            return d;\r\n        }else if(d.source.title.toLowerCase().includes(search)){\r\n            return d;\r\n        }\r\n    }\r\n    ).map( source => {\r\n        return (\r\n            \r\n            <Grid container direction='column' key={source.id} style={{marginTop: 10}}>\r\n                {/* <Grid item style={{marginBottom: 10}}>\r\n                    <h2>{folderFeed.folder}</h2>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Divider />\r\n                </Grid> */}\r\n                \r\n                        <Grid item container style={{paddingLeft: '5vw', padding:20}} spacing={2} >\r\n                            <Grid item xs={1}><Avatar variant='rounded' src={source.source.logo_link} style={{height: 50, width:50}} /> </Grid> \r\n                            <Grid item container xs={8} direction='column'>\r\n                                <Grid item><p>{source.source.title}</p></Grid>\r\n                                <Grid item xs={1} \r\n                                    style={{backgroundColor: 'green', color:'white', padding:5, borderRadius:4, fontSize:14}}\r\n                                >\r\n                                    {source.folder}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button variant='outlined' style={{marginTop:20}} onClick={() => handleUnfollow(source.source.id)}> Unfollow </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n            </Grid>\r\n        )\r\n    })) : (<div></div>)\r\n\r\n    return (\r\n        <div className=\"editFeed\">\r\n            <h1>Organize Your Sources</h1>\r\n            <Grid container spacing={2}>\r\n                <Grid item>\r\n                    <FormControl variant='outlined'>\r\n                        <InputLabel htmlFor=\"outlined-age-native-simple\">Folder</InputLabel>\r\n                        <Select\r\n                        native\r\n                        label=\"Folder\"\r\n                        onChange={handleChange}\r\n                        inputProps={{\r\n                            name: 'folder',\r\n                            id: 'outlined-age-native-simple',\r\n                        }}\r\n                        style={{width: 150}}\r\n                        >\r\n                        <option aria-label=\"All\" value=\"All\">All </option>\r\n                        {feedCategory.map(f => {\r\n                            return (\r\n                                <option aria-label={f} value={f} key={f}>{f}</option>\r\n                            )\r\n                        })}\r\n                        \r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <form>\r\n                        <Input\r\n                        id=\"search-bar\"\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                            <SearchIcon />\r\n                            </InputAdornment>\r\n                        }\r\n                        style={{marginTop:15, width:'30vw'}}\r\n                        placeholder='Search Feed'\r\n                        onChange={handleSearchChange}\r\n                        />\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            {followingList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditFeed;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\ReadLater.js",["116"],"import { Grid, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport {CardContext} from '../Context/CardContext';\r\nimport BookmarkedCard from './BookmarkedCard';\r\n\r\nconst useStyles = makeStyles({\r\n    heading2: {\r\n        color: '#948479',\r\n        fontSize: 12\r\n    }\r\n})\r\n\r\nfunction ReadLater() {\r\n    const classes = useStyles();\r\n    const {bookmarkedContent, fetchBookmarkedArticles} = React.useContext(CardContext); \r\n    React.useEffect(() => {\r\n        console.log('Bookmarks');\r\n        fetchBookmarkedArticles();\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Grid container direction='column'>\r\n                <Grid item>\r\n                    <p className={classes.heading2}>BOARD</p>\r\n                    <h1>Read Later</h1>\r\n                </Grid>\r\n                <Grid item>\r\n                    <p className={classes.heading2}>LATEST</p>\r\n                </Grid>\r\n                \r\n                <BookmarkedCard content={bookmarkedContent} />\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadLater;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\NavSection.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\FeedCategoryForm.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\AddFeed.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\CardView.js",["117"],"import { Grid, makeStyles, Avatar, IconButton, Typography} from '@material-ui/core';\r\nimport { Card, CardHeader, CardActions, CardContent } from '@material-ui/core';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport { CardContext } from '../Context/CardContext';\r\n\r\n\r\nimport React from 'react';\r\nimport { FeedContext } from '../Context/FeedContext';\r\nimport { UserContext } from '../Context/UserContext';\r\n\r\nconst useStyles = makeStyles({\r\n    cardRoot: {\r\n        width: 800,\r\n        maxWidth: '100vw',\r\n        marginBottom: 15,\r\n        padding:10\r\n      },\r\n    media: {\r\n        height: 140,\r\n    }\r\n})\r\n\r\nfunction CardView(props) {\r\n    const classes = useStyles();\r\n    const contents = props.content;\r\n    const {fetchArticles, bookmarkClicked, setBookmarkClicked, bookmarkArticle} = React.useContext(CardContext);\r\n    const { userSources } = React.useContext(FeedContext);\r\n    const {setLoginMessage} = React.useContext(UserContext);\r\n\r\n    React.useEffect(() => {\r\n        console.log('Cardview useffect')\r\n        fetchArticles()\r\n        setLoginMessage('')\r\n    }, [userSources])\r\n\r\n\r\n\r\n    const handleBookmark = (id) => {\r\n        bookmarkArticle(id);\r\n\r\n        setBookmarkClicked(bClicked => ({\r\n            clicked: !bClicked.clicked,\r\n            clickId: id\r\n        }));\r\n    }\r\n    const cardList = contents.map(e => {\r\n        return(\r\n            <Grid item key={e.id}>\r\n                <Card className={classes.cardRoot}>\r\n                    <CardHeader\r\n                        //titleTypographyProps={{variant: 'headline', fontFamily: 'Roboto'}}\r\n                        avatar={\r\n                        <Avatar src={e.source.source_logo} variant='rounded' />\r\n                        }\r\n                        title={\r\n                            <Typography style={{fontFamily: 'Roboto', lineHeight: 1.5}} variant='h6'>\r\n                            {e.title}\r\n                            </Typography>}\r\n                        subheader={new Date(e.published_date) + ' | ' + e.source.source_name}\r\n                    />\r\n                    {/* <CardMedia\r\n                        className={classes.media}\r\n                        image={e.image}\r\n                    /> */}\r\n                    <CardContent dangerouslySetInnerHTML={{__html: e.summary}} \r\n                    style={{padding:10, fontSize: 16, fontFamily: 'Roboto', lineHeight: 1.5, textAlign: 'justify'}}>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton aria-label=\"add to favorites\" onClick={() => {handleBookmark(e.id)}}>\r\n                            {bookmarkClicked.clicked && bookmarkClicked.clickId === e.id ? <BookmarkIcon /> : \r\n                            <BookmarkBorderIcon />}\r\n                        </IconButton>\r\n                        <a target=\"_blank\" href={e.link}>\r\n                            <h5>Read More...</h5>\r\n                        </a>\r\n                    </CardActions>\r\n                </Card>\r\n            </Grid>\r\n            \r\n        )\r\n    })\r\n\r\n    return (\r\n            <Grid item container spacing={4}>\r\n                {cardList}\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default CardView;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\BookmarkedCard.js",["118","119"],"import { Grid, makeStyles, Avatar, IconButton} from '@material-ui/core';\r\nimport { Card, CardHeader, CardActions, CardContent } from '@material-ui/core';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport { CardContext } from '../Context/CardContext';\r\n\r\n\r\nimport React from 'react';\r\nimport { FeedContext } from '../Context/FeedContext';\r\n\r\nconst useStyles = makeStyles({\r\n    cardRoot: {\r\n        maxWidth: '100vw',\r\n        marginBottom: 25,\r\n      },\r\n    media: {\r\n        height: 140,\r\n    }\r\n})\r\n\r\nfunction BookmarkedCard(props) {\r\n    const classes = useStyles();\r\n    const contents = props.content;\r\n    const {fetchBookmarkedArticles, bookmarkClicked, setBookmarkClicked, unbookmarkArticle} = React.useContext(CardContext);\r\n    const { userSources } = React.useContext(FeedContext);\r\n\r\n    React.useEffect(() => {\r\n        console.log('Cardview useffect')\r\n        fetchBookmarkedArticles()\r\n    }, [bookmarkClicked])\r\n\r\n\r\n\r\n    const handleBookmark = (id) => {\r\n        unbookmarkArticle(id);\r\n\r\n        setBookmarkClicked(bClicked => ({\r\n            clicked: !bClicked.clicked,\r\n            clickId: id\r\n        }));\r\n    }\r\n    const cardList = contents.map(e => {\r\n        return(\r\n            <Grid item key={e.id}>\r\n                <Card className={classes.cardRoot}>\r\n                    <CardHeader\r\n                        avatar={\r\n                        <Avatar src={e.article.source.source_logo} variant='rounded' />\r\n                        }\r\n                        title={e.title}\r\n                        subheader={e.article.published_date + ' | ' + e.article.source.source_name}\r\n                    />\r\n                    {/* <CardMedia\r\n                        className={classes.media}\r\n                        image={e.image}\r\n                    /> */}\r\n                    <CardContent dangerouslySetInnerHTML={{__html: e.article.summary}}>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton aria-label=\"add to favorites\" onClick={() => {handleBookmark(e.article.id)}}>\r\n                            {bookmarkClicked.clicked && bookmarkClicked.clickId === e.id ? <BookmarkIcon /> : \r\n                            <BookmarkBorderIcon />}\r\n                        </IconButton>\r\n                        <a href={e.link}>\r\n                            <h5>Read More...</h5>\r\n                        </a>\r\n                    </CardActions>\r\n                </Card>\r\n            </Grid>\r\n            \r\n        )\r\n    })\r\n\r\n    return (\r\n            <Grid item container spacing={4}>\r\n                {cardList}\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default BookmarkedCard;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\FeedInfoCard.js",["120"],"import { Avatar, Grid, Paper, Button, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { FeedContext } from '../Context/FeedContext';\r\nimport FollowPopUp from './FollowPopUp';\r\n\r\nfunction FeedInfoCard(props) {\r\n    const {search} = props;\r\n    const {feedInfo, setFollow, getUserSourcesTitle, unfollowFeed} = React.useContext(FeedContext);\r\n    const feedLength = feedInfo.length;\r\n    \r\n    const titles = getUserSourcesTitle();\r\n    const handleFollow = (e,id) => {\r\n        const f = e.target.outerText.toLowerCase();\r\n        if(f==='follow'){\r\n            setFollow(id);\r\n        }else if(f==='unfollow'){\r\n            unfollowFeed(id);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n         {feedLength !== 0 ?\r\n            (feedInfo.filter(f => {\r\n                if(search === ''){\r\n                    return f;\r\n                }else if(f.title.toLowerCase().includes(search)){\r\n                    return f;\r\n                }\r\n            }).map(feed => {\r\n                return (<Paper variant='outlined' style={{marginTop: 30, width:'40vw', padding:20}} key={feed.id}>\r\n                <Grid container>\r\n                    <Grid item xs={2}>\r\n                        <Avatar variant='rounded' src={feed.logo_link} style={{height: 50, width:50}} />\r\n                    </Grid>\r\n                    <Grid item container direction='column' xs={10}>\r\n                        <Grid item container>\r\n                            <Grid item xs={8}>\r\n                                <Typography variant='h6'>{feed.title}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Button variant='outlined' onClick={(e) => handleFollow(e,feed.id)}> {titles.includes(feed.title)?'Unfollow':'Follow'}</Button>\r\n                                <FollowPopUp />\r\n                            </Grid>\r\n                            \r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <a href= {feed.link}><Typography variant='subtitle2'>{feed.link}</Typography></a>\r\n                        </Grid>\r\n\r\n                        <Grid item style={{marginTop: 20}}>\r\n                            <Typography variant='body2'>{feed.subtitle}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>)\r\n            }))  : (<div />)\r\n        }   \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default FeedInfoCard;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\FollowPopUp.js",["121","122"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { FeedContext } from '../Context/FeedContext';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { InputAdornment, ListItemText} from '@material-ui/core';\r\nimport {withRouter, Link} from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default withRouter(function FollowPopUp(props) {\r\n  const classes = useStyles();\r\n  const {follow, setFollow, feedCategory, followFeed} = React.useContext(FeedContext);\r\n  const [folder, setFolder] = React.useState('');\r\n\r\n  const handleClose = () => {\r\n    setFollow(false);\r\n  };\r\n  React.useEffect(()=>{\r\n    setFollow(false);\r\n    //fetchUserSources();\r\n  }, [])\r\n\r\n  \r\n\r\n  const handleMenuClick = (cat) => {\r\n      console.log(props);\r\n      followFeed(cat);\r\n      handleClose();\r\n\r\n  }\r\n  const handleChange = (e) => {\r\n        const s = e.target.value.toLowerCase();\r\n        setFolder(s);\r\n  }\r\n  \r\n  const menuList = feedCategory.filter(c => {\r\n    if (folder === ''){\r\n      return c;\r\n    }else if(c.toLowerCase().includes(folder)){\r\n      return c;\r\n    }\r\n  }).map(cat => {\r\n      return(\r\n          <MenuItem onClick={() => {handleMenuClick(cat)}} key={cat} style={{padding: '20px 10px'}}>\r\n            {cat}\r\n          </MenuItem>\r\n      )\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={follow} onClose={handleClose}>\r\n        <DialogTitle>Save Feed</DialogTitle>\r\n        <DialogContent>\r\n          <form className={classes.container}>\r\n            <FormControl className={classes.formControl}>\r\n            <Input\r\n                    id=\"search-bar\"\r\n                    startAdornment={\r\n                        <InputAdornment position=\"start\">\r\n                        <SearchIcon />\r\n                        </InputAdornment>\r\n                    }\r\n                    style={{width:'20vw'}}\r\n                    placeholder='Search Feed Folder'\r\n                    onChange={handleChange}\r\n                />\r\n            </FormControl>\r\n          </form>\r\n          {menuList}\r\n          <MenuItem component={Link} to='/createfeed' style={{width: '100%'}}>\r\n                <ListItemText primary=\"Create New Folder\" />\r\n          </MenuItem>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n})\r\n","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\SendEmail.js",["123","124"],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\ResetPassword.js",["125","126"],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\PaginationButtons.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":13,"column":8,"nodeType":"133","messageId":"134","endLine":13,"endColumn":20},{"ruleId":"131","severity":1,"message":"135","line":14,"column":25,"nodeType":"133","messageId":"134","endLine":14,"endColumn":39},{"ruleId":"136","severity":1,"message":"137","line":45,"column":8,"nodeType":"138","endLine":45,"endColumn":10,"suggestions":"139"},{"ruleId":"136","severity":1,"message":"140","line":18,"column":8,"nodeType":"138","endLine":18,"endColumn":10,"suggestions":"141"},{"ruleId":"136","severity":1,"message":"142","line":34,"column":7,"nodeType":"138","endLine":34,"endColumn":9,"suggestions":"143"},{"ruleId":"131","severity":1,"message":"144","line":1,"column":18,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"146","line":41,"column":75,"nodeType":"147","messageId":"148","endLine":41,"endColumn":77},{"ruleId":"136","severity":1,"message":"149","line":19,"column":8,"nodeType":"138","endLine":19,"endColumn":10,"suggestions":"150"},{"ruleId":"136","severity":1,"message":"140","line":32,"column":8,"nodeType":"138","endLine":32,"endColumn":21,"suggestions":"151"},{"ruleId":"131","severity":1,"message":"152","line":25,"column":13,"nodeType":"133","messageId":"134","endLine":25,"endColumn":24},{"ruleId":"136","severity":1,"message":"149","line":30,"column":8,"nodeType":"138","endLine":30,"endColumn":25,"suggestions":"153"},{"ruleId":"145","severity":1,"message":"146","line":23,"column":32,"nodeType":"147","messageId":"148","endLine":23,"endColumn":34},{"ruleId":"136","severity":1,"message":"154","line":39,"column":6,"nodeType":"138","endLine":39,"endColumn":8,"suggestions":"155"},{"ruleId":"145","severity":1,"message":"146","line":54,"column":42,"nodeType":"147","messageId":"148","endLine":54,"endColumn":44},{"ruleId":"131","severity":1,"message":"156","line":3,"column":9,"nodeType":"133","messageId":"134","endLine":3,"endColumn":17},{"ruleId":"131","severity":1,"message":"157","line":5,"column":9,"nodeType":"133","messageId":"134","endLine":5,"endColumn":20},{"ruleId":"131","severity":1,"message":"156","line":3,"column":9,"nodeType":"133","messageId":"134","endLine":3,"endColumn":17},{"ruleId":"131","severity":1,"message":"157","line":5,"column":9,"nodeType":"133","messageId":"134","endLine":5,"endColumn":20},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'PrivateRoute' is defined but never used.","Identifier","unusedVar","'setFolderFeeds' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'loginMessage' and 'setAuth'. Either include them or remove the dependency array.","ArrayExpression",["160"],"React Hook React.useEffect has a missing dependency: 'fetchArticles'. Either include it or remove the dependency array.",["161"],"React Hook React.useEffect has a missing dependency: 'fetchUserSources'. Either include it or remove the dependency array.",["162"],"'Divider' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook React.useEffect has a missing dependency: 'fetchBookmarkedArticles'. Either include it or remove the dependency array.",["163"],["164"],"'userSources' is assigned a value but never used.",["165"],"React Hook React.useEffect has a missing dependency: 'setFollow'. Either include it or remove the dependency array.",["166"],"'Redirect' is defined but never used.","'UserContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [loginMessage, setAuth]",{"range":"181","text":"182"},"Update the dependencies array to be: [fetchArticles]",{"range":"183","text":"184"},"Update the dependencies array to be: [fetchUserSources]",{"range":"185","text":"186"},"Update the dependencies array to be: [fetchBookmarkedArticles]",{"range":"187","text":"188"},"Update the dependencies array to be: [fetchArticles, userSources]",{"range":"189","text":"190"},"Update the dependencies array to be: [bookmarkClicked, fetchBookmarkedArticles]",{"range":"191","text":"192"},"Update the dependencies array to be: [setFollow]",{"range":"193","text":"194"},[1317,1319],"[loginMessage, setAuth]",[531,533],"[fetchArticles]",[1008,1010],"[fetchUserSources]",[552,554],"[fetchBookmarkedArticles]",[1019,1032],"[fetchArticles, userSources]",[994,1011],"[bookmarkClicked, fetchBookmarkedArticles]",[1312,1314],"[setFollow]"]