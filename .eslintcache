[{"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/index.js":"1","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/reportWebVitals.js":"2","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/App.js":"3","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/SignUp.js":"4","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/Home.js":"5","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/Context/UserContext.js":"6","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/PrivateRoute.js":"7","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/Login.js":"8","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/Context/FeedContext.js":"9","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/NavSection.js":"10","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/AddFeed.js":"11","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/ReadLater.js":"12","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/Context/CardContext.js":"13","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/FeedCategoryForm.js":"14","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/TodayView.js":"15","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/SideBar.js":"16","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/EditFeed.js":"17","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/FeedInfoCard.js":"18","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/CardView.js":"19","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/FollowPopUp.js":"20","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/BookmarkedCard.js":"21"},{"size":457,"mtime":1607860193428,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1607860193428,"results":"24","hashOfConfig":"23"},{"size":805,"mtime":1608033916597,"results":"25","hashOfConfig":"23"},{"size":3955,"mtime":1607860193427,"results":"26","hashOfConfig":"23"},{"size":1742,"mtime":1607860193426,"results":"27","hashOfConfig":"23"},{"size":2547,"mtime":1608357056111,"results":"28","hashOfConfig":"23"},{"size":588,"mtime":1607860193426,"results":"29","hashOfConfig":"23"},{"size":4703,"mtime":1608357486559,"results":"30","hashOfConfig":"23"},{"size":4441,"mtime":1608191634532,"results":"31","hashOfConfig":"23"},{"size":2011,"mtime":1607860193426,"results":"32","hashOfConfig":"23"},{"size":1803,"mtime":1607860193424,"results":"33","hashOfConfig":"23"},{"size":1031,"mtime":1608191729850,"results":"34","hashOfConfig":"23"},{"size":2760,"mtime":1608352097885,"results":"35","hashOfConfig":"23"},{"size":2173,"mtime":1608033916602,"results":"36","hashOfConfig":"23"},{"size":894,"mtime":1608190154888,"results":"37","hashOfConfig":"23"},{"size":6130,"mtime":1608191958202,"results":"38","hashOfConfig":"23"},{"size":3932,"mtime":1608033916600,"results":"39","hashOfConfig":"23"},{"size":1936,"mtime":1607860193425,"results":"40","hashOfConfig":"23"},{"size":2745,"mtime":1608357217709,"results":"41","hashOfConfig":"23"},{"size":2752,"mtime":1608033916603,"results":"42","hashOfConfig":"23"},{"size":2682,"mtime":1608191729847,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1qnbwpt",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/index.js",[],["93","94"],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/reportWebVitals.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/App.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/SignUp.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/Home.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/Context/UserContext.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/PrivateRoute.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/Login.js",["95","96"],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/Context/FeedContext.js",["97"],"import React, {useState, createContext} from 'react';\nimport {UserContext} from './UserContext';\n\nexport const FeedContext = createContext();\n\n\nconst BASE_URL = 'http://127.0.0.1:8000';\n\nfunction FeedContextProvider(props) {\n    const [feedCategory, setFeedCategory] = useState([]);\n    const [feedInfo, setFeedInfo] = useState([]);\n    const [follow, setFollow] = useState(null);\n    const [unfollow, setUnfollow] = useState(null);\n    const [folderFeeds, setFolderFeeds] = useState([]);\n    const {auth} = React.useContext(UserContext);\n    const [userSources, setUserSources] = useState([]);\n   \n\n    function getFeedFolder(){\n        const feeds = folderFeeds.map(folderFeed => {\n            const [feedFolder] = folderFeed.feeds.map(feed => ({folder: folderFeed.folder, feed: feed}))\n            return feedFolder\n        })\n\n        return feeds;\n    }\n\n    async function fetchFeed() {\n        console.log(auth);\n\n        const requestOptions = {\n            method: 'GET'\n        }\n\n        await fetch(`${BASE_URL}/api/live_feed/source/`, requestOptions)\n            .then(res => res.json())\n            .then(data => {\n                setFeedInfo(data);\n                console.log(feedInfo);\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    async function followFeed(folder) {\n        console.log(auth);\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Token ${auth.token}` },\n        }\n        await fetch(`${BASE_URL}/api/feed/follow/${follow}/${folder}`, requestOptions)\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n                fetchUserSources();\n            }).catch(err => {\n                console.log(err);\n            })\n\n    }\n\n    async function fetchUserSources() {\n        console.log('FetchuserSources calledddd !!!!!!! ');\n        const requestOptions = {\n            method: 'GET',\n            headers: {'Authorization': `Token ${auth.token}`}\n        }\n\n        fetch(`${BASE_URL}/api/feed/source`, requestOptions)\n            .then(res => res.json())\n            .then(data => {\n                console.log('USer sources data ===== ', data);\n                setUserSources(data);\n                let f = []\n                let folders = data.length>0 ? data.map(source => {\n                    if (!f.includes(source.folder)) {\n                        console.log('Inside the map function --------- ')\n                        f.push(source.folder);\n                        return source.folder;\n                    }\n                    else {\n                        return ''\n                    }\n                }) : []\n                const final = folders.filter(f1 => f1 !== '');\n                console.log('f === ', f)\n                console.log('finall ===== ', final);\n\n                setFeedCategory(final);\n            }).catch(err => console.log(err))\n\n        // const f = []\n        // const folders = userSources.length ? userSources.map(source => {\n        //     if (!f.includes(source.folder)){\n        //         f.push(source.folder);\n        //         return source.folder;\n        //     }\n        //     else{\n        //         return ''\n        //     }\n        // }):[]\n        // const final = folders.filter(f =>  f !== '');\n        // console.log('finall ===== ', final);\n\n        // setFeedCategory(final);\n\n    }\n\n    async function unfollowFeed(id) {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {'Authorization': `Token ${auth.token}`}\n        }\n\n        fetch(`${BASE_URL}/api/feed/unfollow/${id}`, requestOptions)\n            .then(res => res.json())\n            .then(res => {\n                console.log(res);\n                fetchUserSources();\n            })\n    }    \n    \n\n    return (\n        <FeedContext.Provider value={{\n            feedCategory, \n            setFeedCategory, \n            feedInfo, \n            setFeedInfo, \n            fetchFeed, \n            follow, \n            setFollow,\n            folderFeeds, \n            getFeedFolder, \n            userSources, \n            fetchUserSources, \n            unfollow, \n            setUnfollow,\n            followFeed,\n            unfollowFeed\n            }}\n        >\n            {props.children}\n        </FeedContext.Provider>\n    )\n}\n\nexport default FeedContextProvider;","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/NavSection.js",["98"],"import React from 'react';\nimport { Button, Grid, IconButton, Menu, MenuItem } from  '@material-ui/core'\nimport { AccountCircle, AddCircle } from '@material-ui/icons'\nimport {Link} from 'react-router-dom';\nimport {FeedContext} from '../Context/FeedContext';\nimport { UserContext } from '../Context/UserContext';\n\n\nconst NavSection = () => {\n    const { logout } = React.useContext(UserContext);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const menuItem = [\n        {id:1,\n        name:'Logout',\n        onclick: () => {\n            console.log('clicked logout');\n            logout();\n        }\n    }\n    ]\n    const {fetchFeed, fetchUserSources} = React.useContext(FeedContext);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleRoute = () => {\n        fetchFeed();\n    }\n\n    const menuList = menuItem.map(item => {\n        return (\n            <MenuItem key={item.id} component={Link} onClick={item.onclick} to='/'>{item.name}</MenuItem>\n        )\n    });\n\n    return (\n        <Grid container justify='flex-end' spacing={1} style={{paddingTop: 10}}>\n            <Grid item>\n                <Link to='/addfeed'>\n                    <Button startIcon={<AddCircle />} style={{marginTop: 5}} onClick={handleRoute}>\n                        Add New RSS Feed\n                    </Button>\n                </Link>          \n            </Grid>\n            <Grid item>\n                <IconButton onClick={handleClick}>\n                    <AccountCircle />\n                </IconButton>\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    {menuList}\n                </Menu>\n            </Grid>\n            \n            \n        </Grid>\n    )\n}\n\nexport default NavSection\n","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/AddFeed.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/ReadLater.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/Context/CardContext.js",["99"],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/FeedCategoryForm.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/TodayView.js",["100","101"],"import React from 'react';\nimport CardView from './CardView';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport {CardContext} from '../Context/CardContext';\nimport {FeedContext} from '../Context/FeedContext';\n\nconst useStyles = makeStyles({\n    heading2: {\n        color: '#948479'\n    }\n})\n\nfunction TodayView(){\n    const classes = useStyles();\n    const {content, auth} = React.useContext(CardContext);\n    const {fetchUserSources} = React.useContext(FeedContext);\n\n    React.useEffect(() => {\n        console.log('Todayview Useffect Called!')\n        fetchUserSources();\n    },[])\n\n    return (\n        <Grid container>\n            <Grid item>\n                <h1>Today</h1>\n                <h3 className={classes.heading2}>The insights you need to keep ahead</h3>\n            </Grid>\n\n            <CardView content={content}/>\n\n        </Grid>\n    )\n}\n\nexport default TodayView;","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/SideBar.js",["102"],"import React from 'react';\n\nimport { Button, Grid, IconButton, Typography, Avatar} from \"@material-ui/core\";\nimport DynamicFeedIcon from '@material-ui/icons/DynamicFeed';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport {ListItem, MenuList, MenuItem, ListItemText, ListItemIcon, Collapse} from '@material-ui/core';\nimport {ExpandLess, Reorder} from '@material-ui/icons';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { makeStyles } from  '@material-ui/core/styles';\nimport { Link, withRouter} from 'react-router-dom';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport { FeedContext } from '../Context/FeedContext';\nimport { CardContext } from '../Context/CardContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    nested: {\n      paddingLeft: theme.spacing(1),\n    },\n    nested2: {\n        paddingLeft: theme.spacing(2)\n    }\n  }));\n\n\nfunction SideBar(props) {\n\n    const { location: {pathname} } = props\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const [feedOpen, setFeedOpen] = React.useState({open:false, id:null});\n    const {feedCategory, folderFeeds, fetchUserSources, userSources} = React.useContext(FeedContext);\n    const [folder, setFolder] = React.useState([])\n    const {fetchArticles, fetchBookmarkedArticles} = React.useContext(CardContext);\n\n    React.useState(() => {\n        console.log('Rerendered??');\n        fetchUserSources(); \n    }, [userSources, feedCategory])\n    \n\n    const handleFeedOpen = (id) => {\n        setFeedOpen(prev => ({open: !prev.open, id: id}))\n        const f = userSources.filter(x => x.folder === id );\n        setFolder(f);\n    }\n    const handleClick = () =>{\n        setOpen(!open);\n    }\n\n    const handleContent = () => {\n        fetchArticles();\n    }\n\n    const handleSources = () => {\n        // fetchUserSources();\n    }\n\n    const handleBookmark = () => {\n        fetchBookmarkedArticles();\n    }\n\n    const feedsList = feedCategory.map(text => {\n\n        return (\n        <div key={text}>\n            <MenuItem onClick={() => handleFeedOpen(text)}>\n                <ListItemIcon>\n                    {feedOpen.open && (feedOpen.id === text) ? <ExpandLess /> : <ArrowForwardIosIcon style={{width:15, height:15, paddingLeft:5}}/>}\n                </ListItemIcon>\n                <ListItemText>{text}</ListItemText>\n            </MenuItem>\n            <Collapse in={feedOpen.open && (feedOpen.id === text)} timeout=\"auto\" unmountOnExit>\n                        <MenuList component=\"div\" disablePadding className = {classes.nested2}>\n                            {folder.length ? (folder.map( feed => {\n                                return (\n                                    <MenuItem key={feed.id}>\n                                        <Avatar variant='square' src={feed.source.logo_link} style={{height: 20, width:20}} />\n                                        <ListItemText style={{marginLeft: 10, fontSize:12}}>{feed.source.title}</ListItemText>\n                                    </MenuItem>\n                                )\n                            })):<div></div>\n                            \n                            }\n                        </MenuList>\n            </Collapse>\n\n        </div>\n        \n    )})\n\n    return (\n        <Grid container direction='column'>\n                <Grid item>\n                    <Avatar src='/Feeds-Green-icon.png' style={{padding:10, width:40, height:40 }} />\n                </Grid>\n            <Grid item xs={12}>\n                <MenuList>\n                    <MenuItem component={Link} to='/home' selected={'/home' === pathname} onClick={handleContent} >\n                        <ListItemIcon>\n                            <DynamicFeedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Today\"/>\n                    </MenuItem>\n\n                    <MenuItem component={Link} to='/readlater' selected={'/readlater' === pathname} onClick={handleBookmark} >\n                        <ListItemIcon>\n                            <BookmarkBorderIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Read Later\"/>\n                    </MenuItem>\n\n                    <ListItem>\n                        <Grid container>\n                            <Grid item xs={4}>\n                                <Typography style={{marginTop: 4}}>Feeds</Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button onClick={handleClick} style={{marginLeft:30}}>\n                                    <Typography variant='caption'>\n                                        {open ? 'Hide' : 'Show'}\n                                    </Typography>\n                                </Button>\n                            </Grid>\n                            <Grid item xs={2}>\n                                <IconButton style={{width:3, height:3, marginLeft:10}} component={Link} to='/editfeed' onClick={handleSources}>\n                                    <SettingsIcon />\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    \n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <MenuList component=\"div\" disablePadding className = {classes.nested}>\n                            <MenuItem >\n                                <ListItemIcon>\n                                    <Reorder />\n                                </ListItemIcon>\n                                <ListItemText primary=\"All\" />\n                            </MenuItem>\n                            {feedsList}\n                            \n                        </MenuList>\n                    </Collapse>\n                </MenuList>\n \n            </Grid>\n        </Grid>\n        \n    )\n}\n\nexport default withRouter(SideBar);","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/EditFeed.js",["103"],"import { Avatar, Divider, Grid, Button, FormControl, Select, InputLabel, Input, InputAdornment } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React from 'react';\nimport {FeedContext} from '../Context/FeedContext'\n\n\nfunction EditFeed() {\n    const {folderFeeds, userSources, unfollowFeed} = React.useContext(FeedContext);\n    const [displayValues, setDisplayValues] = React.useState(folderFeeds);\n    console.log(userSources);\n\n    const handleChange = (e) => {\n        const opt = e.target.value;\n        if(opt !== 'All'){\n            const newDisplayValues = folderFeeds.length ? folderFeeds.filter(d => d.folder === e.target.value) : []\n            setDisplayValues(newDisplayValues);\n            console.log(displayValues);\n        }else{\n            setDisplayValues(folderFeeds);\n            console.log(displayValues);\n        } \n        \n        \n    }\n\n    React.useEffect(() => {\n        console.log('EditFeed useEffect called!!!');\n    }, [userSources])\n\n    const handleUnfollow = (id) => {\n        unfollowFeed(id);\n    }\n\n    const followingList = userSources.length ? (userSources.map( source => {\n        return (\n            <Grid container direction='column' key={source.id} style={{marginTop: 10}}>\n                {/* <Grid item style={{marginBottom: 10}}>\n                    <h2>{folderFeed.folder}</h2>\n                </Grid>\n                <Grid item>\n                    <Divider />\n                </Grid> */}\n                \n                        <Grid item container style={{paddingLeft: '5vw', padding:20}} spacing={2} >\n                            <Grid item xs={1}><Avatar variant='rounded' src={source.source.logo_link} style={{height: 50, width:50}} /> </Grid> \n                            <Grid item xs={8}><p>{source.source.title}</p></Grid>\n                            <Grid item xs={3}>\n                                <Button variant='outlined' onClick={() => handleUnfollow(source.source.id)}> Unfollow </Button>\n                            </Grid>\n                        </Grid>\n            </Grid>\n        )\n    })) : (<div></div>)\n\n    return (\n        <div className=\"editFeed\">\n            <h1>Organize Your Sources</h1>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <FormControl variant='outlined'>\n                        <InputLabel htmlFor=\"outlined-age-native-simple\">Folder</InputLabel>\n                        <Select\n                        native\n                        label=\"Folder\"\n                        onChange={handleChange}\n                        inputProps={{\n                            name: 'folder',\n                            id: 'outlined-age-native-simple',\n                        }}\n                        style={{width: 150}}\n                        >\n                        <option aria-label=\"All\" value=\"All\">All </option>\n                        {folderFeeds.map(f => {\n                            return (\n                                <option aria-label={f.folder} value={f.folder} key={f.folder}>{f.folder}</option>\n                            )\n                        })}\n                        \n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item>\n                    <form>\n                        <Input\n                        id=\"search-bar\"\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                            <SearchIcon />\n                            </InputAdornment>\n                        }\n                        style={{marginTop:15, width:'30vw'}}\n                        placeholder='Search'\n                        \n                        />\n                    </form>\n                </Grid>\n            </Grid>\n            \n            {followingList}\n        </div>\n    )\n}\n\nexport default EditFeed;","/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/FeedInfoCard.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/CardView.js",["104"],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/FollowPopUp.js",[],"/Users/sudeep/Desktop/rss/fontend/rss-feed-reader/src/components/BookmarkedCard.js",["105","106"],"import { Grid, makeStyles, Avatar, IconButton} from '@material-ui/core';\nimport { Card, CardHeader, CardActions, CardContent } from '@material-ui/core';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport { CardContext } from '../Context/CardContext';\n\n\nimport React from 'react';\nimport { FeedContext } from '../Context/FeedContext';\n\nconst useStyles = makeStyles({\n    cardRoot: {\n        maxWidth: '100vw',\n        marginBottom: 25,\n      },\n    media: {\n        height: 140,\n    }\n})\n\nfunction BookmarkedCard(props) {\n    const classes = useStyles();\n    const contents = props.content;\n    const {fetchBookmarkedArticles, bookmarkClicked, setBookmarkClicked, unbookmarkArticle} = React.useContext(CardContext);\n    const { userSources } = React.useContext(FeedContext);\n\n    React.useEffect(() => {\n        console.log('Cardview useffect')\n        fetchBookmarkedArticles()\n    }, [bookmarkClicked])\n\n\n\n    const handleBookmark = (id) => {\n        unbookmarkArticle(id);\n\n        setBookmarkClicked(bClicked => ({\n            clicked: !bClicked.clicked,\n            clickId: id\n        }));\n    }\n    const cardList = contents.map(e => {\n        return(\n            <Grid item key={e.id}>\n                <Card className={classes.cardRoot}>\n                    <CardHeader\n                        avatar={\n                        <Avatar src={e.article.source.source_logo} variant='rounded' />\n                        }\n                        title={e.title}\n                        subheader={e.article.published_date + ' | ' + e.article.source.source_name}\n                    />\n                    {/* <CardMedia\n                        className={classes.media}\n                        image={e.image}\n                    /> */}\n                    <CardContent dangerouslySetInnerHTML={{__html: e.article.summary}}>\n                    </CardContent>\n                    <CardActions disableSpacing>\n                        <IconButton aria-label=\"add to favorites\" onClick={() => {handleBookmark(e.article.id)}}>\n                            {bookmarkClicked.clicked && bookmarkClicked.clickId === e.id ? <BookmarkIcon /> : \n                            <BookmarkBorderIcon />}\n                        </IconButton>\n                        <a href={e.link}>\n                            <h5>Read More...</h5>\n                        </a>\n                    </CardActions>\n                </Card>\n            </Grid>\n            \n        )\n    })\n\n    return (\n            <Grid item container spacing={4}>\n                {cardList}\n            </Grid>\n    )\n}\n\nexport default BookmarkedCard;",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":4,"column":9,"nodeType":"113","messageId":"114","endLine":4,"endColumn":20},{"ruleId":"115","severity":1,"message":"116","line":46,"column":8,"nodeType":"117","endLine":46,"endColumn":10,"suggestions":"118"},{"ruleId":"111","severity":1,"message":"119","line":14,"column":25,"nodeType":"113","messageId":"114","endLine":14,"endColumn":39},{"ruleId":"111","severity":1,"message":"120","line":21,"column":23,"nodeType":"113","messageId":"114","endLine":21,"endColumn":39},{"ruleId":"115","severity":1,"message":"121","line":18,"column":8,"nodeType":"117","endLine":18,"endColumn":10,"suggestions":"122"},{"ruleId":"111","severity":1,"message":"123","line":15,"column":21,"nodeType":"113","messageId":"114","endLine":15,"endColumn":25},{"ruleId":"115","severity":1,"message":"124","line":21,"column":7,"nodeType":"117","endLine":21,"endColumn":9,"suggestions":"125"},{"ruleId":"111","severity":1,"message":"126","line":37,"column":26,"nodeType":"113","messageId":"114","endLine":37,"endColumn":37},{"ruleId":"111","severity":1,"message":"127","line":1,"column":18,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"128","line":33,"column":8,"nodeType":"117","endLine":33,"endColumn":21,"suggestions":"129"},{"ruleId":"111","severity":1,"message":"130","line":25,"column":13,"nodeType":"113","messageId":"114","endLine":25,"endColumn":24},{"ruleId":"115","severity":1,"message":"131","line":30,"column":8,"nodeType":"117","endLine":30,"endColumn":25,"suggestions":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'FeedContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'loginMessage' and 'setAuth'. Either include them or remove the dependency array.","ArrayExpression",["135"],"'setFolderFeeds' is assigned a value but never used.","'fetchUserSources' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'fetchArticles'. Either include it or remove the dependency array.",["136"],"'auth' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'fetchUserSources'. Either include it or remove the dependency array.",["137"],"'folderFeeds' is assigned a value but never used.","'Divider' is defined but never used.","React Hook React.useEffect has missing dependencies: 'fetchArticles' and 'setLoginMessage'. Either include them or remove the dependency array.",["138"],"'userSources' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'fetchBookmarkedArticles'. Either include it or remove the dependency array.",["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [loginMessage, setAuth]",{"range":"150","text":"151"},"Update the dependencies array to be: [fetchArticles]",{"range":"152","text":"153"},"Update the dependencies array to be: [fetchUserSources]",{"range":"154","text":"155"},"Update the dependencies array to be: [fetchArticles, setLoginMessage, userSources]",{"range":"156","text":"157"},"Update the dependencies array to be: [bookmarkClicked, fetchBookmarkedArticles]",{"range":"158","text":"159"},[1325,1327],"[loginMessage, setAuth]",[514,516],"[fetchArticles]",[592,594],"[fetchUserSources]",[1080,1093],"[fetchArticles, setLoginMessage, userSources]",[965,982],"[bookmarkClicked, fetchBookmarkedArticles]"]