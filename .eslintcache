[{"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\index.js":"1","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\reportWebVitals.js":"2","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\App.js":"3","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\PrivateRoute.js":"4","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\Home.js":"5","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\Context\\UserContext.js":"6","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\Context\\FeedContext.js":"7","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\SignUp.js":"8","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\Login.js":"9","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\Context\\CardContext.js":"10","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\SideBar.js":"11","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\TodayView.js":"12","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\EditFeed.js":"13","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\ReadLater.js":"14","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\NavSection.js":"15","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\FeedCategoryForm.js":"16","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\AddFeed.js":"17","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\CardView.js":"18","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\BookmarkedCard.js":"19","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\FeedInfoCard.js":"20","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\FollowPopUp.js":"21","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\SendEmail.js":"22","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\ResetPassword.js":"23","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\PaginationButtons.js":"24","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\SourceView.js":"25"},{"size":457,"mtime":1607240141872,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":1045,"mtime":1608357494342,"results":"29","hashOfConfig":"27"},{"size":611,"mtime":1607439525595,"results":"30","hashOfConfig":"27"},{"size":1996,"mtime":1608437874476,"results":"31","hashOfConfig":"27"},{"size":4843,"mtime":1608396071187,"results":"32","hashOfConfig":"27"},{"size":5364,"mtime":1608382606817,"results":"33","hashOfConfig":"27"},{"size":4946,"mtime":1608388170032,"results":"34","hashOfConfig":"27"},{"size":4856,"mtime":1608388170031,"results":"35","hashOfConfig":"27"},{"size":2948,"mtime":1608391111465,"results":"36","hashOfConfig":"27"},{"size":6136,"mtime":1608437881999,"results":"37","hashOfConfig":"27"},{"size":1882,"mtime":1608393748011,"results":"38","hashOfConfig":"27"},{"size":4961,"mtime":1608437481041,"results":"39","hashOfConfig":"27"},{"size":1084,"mtime":1608389728596,"results":"40","hashOfConfig":"27"},{"size":2062,"mtime":1608437887807,"results":"41","hashOfConfig":"27"},{"size":2244,"mtime":1608292894501,"results":"42","hashOfConfig":"27"},{"size":2063,"mtime":1608296998420,"results":"43","hashOfConfig":"27"},{"size":2982,"mtime":1608395700870,"results":"44","hashOfConfig":"27"},{"size":2979,"mtime":1608395611693,"results":"45","hashOfConfig":"27"},{"size":2534,"mtime":1608365855885,"results":"46","hashOfConfig":"27"},{"size":3039,"mtime":1608305693504,"results":"47","hashOfConfig":"27"},{"size":2969,"mtime":1608394637638,"results":"48","hashOfConfig":"27"},{"size":4039,"mtime":1608386217857,"results":"49","hashOfConfig":"27"},{"size":809,"mtime":1608364551463,"results":"50","hashOfConfig":"27"},{"size":3773,"mtime":1608387498518,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"abr5tk",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"54"},"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\index.js",[],["116","117"],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\reportWebVitals.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\App.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\PrivateRoute.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\Home.js",["118"],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\Context\\UserContext.js",["119","120","121","122"],"import React from 'react';\r\n\r\nexport const UserContext = React.createContext();\r\n\r\nconst BASE_URL = 'http://127.0.0.1:8000';\r\n\r\nfunction UserContextProvider(props) {\r\n    const [auth, setAuth] = React.useState({\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        token: null,\r\n        user: null\r\n    })\r\n\r\n    const [resetOk, setResetOk] = React.useState(false);\r\n    const [isRegistered, setRegistered] = React.useState(false)\r\n    const [loginMessage, setLoginMessage] = React.useState('');    // for showing 'invalid credentials' message when needed\r\n    const [userInfo, setUserInfo] = React.useState({});\r\n\r\n    //to show errors while signing up\r\n    const [signupErrorMessage, setSignupErrorMessage] = React.useState('');\r\n\r\n    const [emailMessage, setEmailMessage] = React.useState('');  \r\n    const [displayNameMessage, setDisplyNameMessage] = React.useState('');\r\n    const [passwordMessage, setPasswordMessage] = React.useState('');\r\n    const [confirmpasswordMessage, setConfirmPasswordMessage] = React.useState('');\r\n\r\n    async function login(loginCred) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(loginCred)\r\n        }\r\n        await fetch(`${BASE_URL}/api/account/login`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log('response data == ', data);\r\n                if ('token' in data){\r\n                    setAuth(prev => ({ ...prev, isAuthenticated: true, token: data.token }));\r\n                    localStorage.setItem('token', data.token);\r\n                }\r\n                else{\r\n                    console.log('Errorrrr:: ', data)\r\n                    setLoginMessage('Oops, invalid credentials!');\r\n                }\r\n            }).catch(err => {\r\n                console.log('Error from catch , ', err);\r\n                // setAuth(prev => ({ ...prev, isAuthenticated: false }));\r\n\r\n            })\r\n    }\r\n    async function registerUser(user_info) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(user_info)\r\n        }\r\n        fetch(`${BASE_URL}/api/account/register`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log('Register user response === ', typeof data ,data);\r\n                if (data.response === \"successfully registered new user.\"){\r\n                setRegistered(!isRegistered);\r\n                }\r\n                else{\r\n                    console.log('Not signed uop, ', data.email)\r\n                    setSignupErrorMessage('Error in sign up!');\r\n                    }\r\n            }).catch(err => {\r\n                //console.log(err);\r\n            })\r\n    }\r\n    function sendForReset(resetContent){\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(resetContent)\r\n        }\r\n    \r\n        fetch('http://127.0.0.1:8000/api/account/password_resetconfirm/', requestOptions)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res);\r\n                setResetOk(true);\r\n            })\r\n            .catch(err => console.log(err))\r\n        \r\n    }\r\n\r\n    async function fetchUserInfo(){\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json', 'Authorization': `Token ${auth.token}`}\r\n        }\r\n    \r\n        fetch('http://127.0.0.1:8000/api/account/info', requestOptions)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res);\r\n                setUserInfo(res);\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n    }\r\n    \r\n\r\n    const logout = () => {\r\n        localStorage.clear();\r\n        setAuth({\r\n            isAuthenticated: false,\r\n            isLoading: false,\r\n            token: null,\r\n            user: null\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <UserContext.Provider value={{\r\n            auth,\r\n            setAuth,\r\n            registerUser,\r\n            login,\r\n            logout,\r\n            isRegistered,\r\n            loginMessage,\r\n            setLoginMessage,\r\n            sendForReset,\r\n            resetOk,\r\n            emailMessage,\r\n            displayNameMessage,\r\n            passwordMessage,\r\n            confirmpasswordMessage,\r\n            signupErrorMessage, \r\n            setSignupErrorMessage,\r\n            setRegistered,\r\n            fetchUserInfo,\r\n            userInfo\r\n        }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserContextProvider;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\Context\\FeedContext.js",["123","124"],"import { CodeSharp } from '@material-ui/icons';\r\nimport React, {useState, createContext} from 'react';\r\nimport {UserContext} from './UserContext';\r\n\r\nexport const FeedContext = createContext();\r\n\r\n\r\nconst BASE_URL = 'http://127.0.0.1:8000';\r\n\r\nfunction FeedContextProvider(props) {\r\n    const [feedCategory, setFeedCategory] = useState([]);\r\n    const [feedInfo, setFeedInfo] = useState([]);\r\n    const [follow, setFollow] = useState(null);\r\n    const [unfollow, setUnfollow] = useState(null);\r\n    const [folderFeeds, setFolderFeeds] = useState([]);\r\n    const {auth} = React.useContext(UserContext);\r\n    const [userSources, setUserSources] = useState([]);\r\n    const [sourceArticle, setSourceArticle] = useState([]);\r\n   \r\n\r\n    function getFeedFolder(){\r\n        const feeds = folderFeeds.map(folderFeed => {\r\n            const [feedFolder] = folderFeed.feeds.map(feed => ({folder: folderFeed.folder, feed: feed}))\r\n            return feedFolder\r\n        })\r\n\r\n        return feeds;\r\n    }\r\n\r\n    function getUserSourcesTitle(){\r\n        return userSources.length?userSources.map(s => s.source.title):[]\r\n    }\r\n\r\n    async function fetchFeed() {\r\n        console.log(auth);\r\n\r\n        const requestOptions = {\r\n            method: 'GET'\r\n        }\r\n\r\n        await fetch(`${BASE_URL}/api/live_feed/source/`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setFeedInfo(data);\r\n                console.log(feedInfo);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    async function followFeed(folder) {\r\n        console.log(auth);\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Token ${auth.token}` },\r\n        }\r\n        await fetch(`${BASE_URL}/api/feed/follow/${follow}/${folder}`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                fetchUserSources();\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n\r\n    async function fetchUserSources() {\r\n        console.log('FetchuserSources calledddd !!!!!!! ');\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {'Authorization': `Token ${auth.token}`}\r\n        }\r\n\r\n        fetch(`${BASE_URL}/api/feed/source`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log('USer sources data ===== ', data);\r\n                setUserSources(data);\r\n                let f = []\r\n                let folders = data.length>0 ? data.map(source => {\r\n                    if (!f.includes(source.folder)) {\r\n                        console.log('Inside the map function --------- ')\r\n                        f.push(source.folder);\r\n                        return source.folder;\r\n                    }\r\n                    else {\r\n                        return ''\r\n                    }\r\n                }) : []\r\n                const final = folders.filter(f1 => f1 !== '');\r\n                console.log('f === ', f)\r\n                console.log('finall ===== ', final);\r\n\r\n                setFeedCategory(final);\r\n            }).catch(err => console.log(err))\r\n\r\n        // const f = []\r\n        // const folders = userSources.length ? userSources.map(source => {\r\n        //     if (!f.includes(source.folder)){\r\n        //         f.push(source.folder);\r\n        //         return source.folder;\r\n        //     }\r\n        //     else{\r\n        //         return ''\r\n        //     }\r\n        // }):[]\r\n        // const final = folders.filter(f =>  f !== '');\r\n        // console.log('finall ===== ', final);\r\n\r\n        // setFeedCategory(final);\r\n\r\n    }\r\n\r\n    async function unfollowFeed(id) {\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: {'Authorization': `Token ${auth.token}`}\r\n        }\r\n\r\n        fetch(`${BASE_URL}/api/feed/unfollow/${id}`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res);\r\n                fetchUserSources();\r\n            })\r\n    }    \r\n    \r\n    async function fetchSourceArticle(id){\r\n        console.log(id)\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json', 'Authorization': `Token ${auth.token}`}\r\n        }\r\n\r\n        fetch(`${BASE_URL}/api/feed/article/source/${id}`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setSourceArticle(res);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <FeedContext.Provider value={{\r\n            feedCategory, \r\n            setFeedCategory, \r\n            feedInfo, \r\n            setFeedInfo, \r\n            fetchFeed, \r\n            follow, \r\n            setFollow,\r\n            folderFeeds, \r\n            getFeedFolder, \r\n            userSources, \r\n            fetchUserSources, \r\n            unfollow, \r\n            setUnfollow,\r\n            followFeed,\r\n            unfollowFeed,\r\n            getUserSourcesTitle,\r\n            sourceArticle,\r\n            fetchSourceArticle\r\n            }}\r\n        >\r\n            {props.children}\r\n        </FeedContext.Provider>\r\n    )\r\n}\r\n\r\nexport default FeedContextProvider;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\SignUp.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\Login.js",["125"],"import {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport {UserContext} from '../Context/UserContext';\r\n\r\nconst { Button, Grid, Typography, TextField, Avatar } = require(\"@material-ui/core\");\r\nconst { Redirect } = require(\"react-router-dom\");\r\n\r\n\r\nconst theme = createMuiTheme({\r\n    typography:{\r\n      h3: {\r\n        color: 'green',\r\n        fontWeight: 'bold',\r\n        marginBottom: 15\r\n      },\r\n      subtitle2: {\r\n        color: 'gray',\r\n        marginBottom:15\r\n      },\r\n      subtitle1: {\r\n        fontWeight: 'bold',\r\n        marginBottom: 10\r\n        }\r\n    }\r\n    \r\n})\r\n\r\n\r\nconst Login = () => {\r\n    const [loginCred, setLoginCred] = React.useState({\r\n        username: null,\r\n        password: null\r\n    })\r\n\r\n    const { auth, setAuth, login, isRegistered, loginMessage, setSignupErrorMessage} = React.useContext(UserContext);\r\n    // const [loginMessage, setLoginMessage] = React.useState('');    // for showing 'invalid credentials' message when needed\r\n\r\n    React.useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token){\r\n            // console.log('Found token ==> ', token)\r\n            setAuth(prev => ({ ...prev, isAuthenticated: true, token: token }));\r\n        }\r\n        // console.log('This is login page ', loginMessage)\r\n        setSignupErrorMessage('');\r\n    }, []);\r\n\r\n    if (auth.isAuthenticated){\r\n        return <Redirect to='/home' />\r\n    }\r\n    \r\n    const handleChange = (e) => {\r\n        setLoginCred(prev => ({...prev, [e.target.id]:e.target.value}));\r\n    }\r\n    \r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        console.log('from handlelogin=== ',e );\r\n        login(loginCred);\r\n    }\r\n    return(\r\n        <ThemeProvider theme={theme}>\r\n        <div>\r\n            <Grid container style={{padding:'15vw'}} spacing={4}>\r\n                <Grid item xs={1}>\r\n                    <Avatar src='/Feeds-Green-icon.png' />\r\n                </Grid>\r\n                <Grid item container xs={7} direction='column'>\r\n                    <Grid item>\r\n                        <Typography variant='h3'>Welcome to RSS Feed Reader</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant='h6'>\r\n                            Keep up with the topics and trends you care about, without the overwhelm\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container xs={4} direction='column'>\r\n                    {isRegistered? <Typography variant='subtitle2' style={{backgroundColor: 'lightgreen', color:\"black\"}} >Succesfully Registered</Typography> : <div />}\r\n                    <Typography variant='subtitle1'>Login to your Account</Typography>\r\n                    <form onSubmit={handleLogin}>\r\n                    <TextField \r\n                        variant=\"outlined\"\r\n                        color='secondary'\r\n                        label='Email'\r\n                        type='email'\r\n                        placeholder='test@test.com'\r\n                        style={{marginBottom:15}}\r\n                        id='username'\r\n                        onChange={handleChange}\r\n                    />\r\n                    <TextField \r\n                        variant=\"outlined\"\r\n                        color='secondary'\r\n                        label='Password'\r\n                        type='password'\r\n                        style={{marginBottom:15}}\r\n                        id='password'\r\n                        onChange={handleChange}\r\n                    />\r\n                    <br />\r\n                        {loginMessage.length>0 ? \r\n                            <div>\r\n                            <span style={{color:\"red\"}}>\r\n                                {loginMessage}\r\n                            </span>\r\n                            <br />\r\n                            <br />\r\n                                </div>\r\n                            : <div></div>\r\n                        }\r\n\r\n\r\n                    <Button type='submit' variant='filled' style={{color: 'white', backgroundColor:'green', marginBottom:15}}> \r\n                        Log In \r\n                    </Button>\r\n                    </form>\r\n                    <a href='/send_email'>\r\n                        <Typography variant='subtitle2'>Forgot your Password?</Typography>\r\n                    </a>\r\n                    <a href='/register'>\r\n                        <Typography variant='subtitle2'>Don't have an Account yet?</Typography>\r\n                    </a>\r\n                    \r\n                </Grid>\r\n                <Grid item>\r\n                   \r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default Login;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\Context\\CardContext.js",["126"],"import React from 'react';\r\nimport {UserContext} from './UserContext';\r\n\r\nexport const CardContext = React.createContext();\r\n\r\nconst BASE_URL = 'http://127.0.0.1:8000';\r\n\r\n\r\nfunction CardContextProvider(props) {\r\n    const [content, setContent] = React.useState([]);\r\n\r\n    const [bookmarkedContent, setBookmarkedContent] = React.useState([]);\r\n    const [bookmarkClicked, setBookmarkClicked] = React.useState({});\r\n    const {auth} = React.useContext(UserContext);\r\n\r\n    React.useEffect(() => {\r\n        fetchArticles();\r\n    }, [])\r\n\r\n\r\n    async function fetchArticles(){\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {'Authorization': `Token ${auth.token}`}\r\n        }\r\n\r\n        fetch(`${BASE_URL}/api/feed/article`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                data.sort((a,b) => new Date(b.published_date) - new Date(a.published_date));\r\n                setContent(data);\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    async function bookmarkArticle(id){\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json', 'Authorization': `Token ${auth.token}`}\r\n        }\r\n\r\n        fetch(`${BASE_URL}/api/feed/bookmark/add/${id}`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // console.log(data);\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    async function unbookmarkArticle(id){\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: {'Authorization': `Token ${auth.token}`}\r\n        }\r\n\r\n        fetch(`${BASE_URL}/api/feed/bookmark/remove/${id}`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    async function fetchBookmarkedArticles(){\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {'Authorization': `Token ${auth.token}`}\r\n        }\r\n\r\n        fetch(`${BASE_URL}/api/feed/bookmark`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setBookmarkedContent(data);\r\n            }).catch(err => console.log(err));\r\n    }\r\n    return (\r\n        <CardContext.Provider \r\n            value={{\r\n                content,\r\n                setContent,\r\n                bookmarkedContent, \r\n                setBookmarkedContent, \r\n                bookmarkClicked, \r\n                setBookmarkClicked, \r\n                fetchArticles,\r\n                bookmarkArticle,\r\n                fetchBookmarkedArticles,\r\n                unbookmarkArticle\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CardContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default CardContextProvider;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\SideBar.js",["127"],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\TodayView.js",["128"],"import React from 'react';\r\nimport CardView from './CardView';\r\nimport { Grid, makeStyles } from '@material-ui/core';\r\nimport {CardContext} from '../Context/CardContext';\r\nimport {UserContext} from '../Context/UserContext';\r\nimport {FeedContext} from '../Context/FeedContext';\r\nimport PaginationButtons from './PaginationButtons';\r\n\r\nconst useStyles = makeStyles({\r\n    heading2: {\r\n        color: '#948479'\r\n    },\r\n    heading3: {\r\n        color: '#948479',\r\n        fontSize: 12\r\n    }\r\n})\r\n\r\nfunction TodayView(){\r\n    const classes = useStyles();\r\n\r\n    const {content} = React.useContext(CardContext);\r\n    const {fetchUserSources} = React.useContext(FeedContext);\r\n    const {setRegistered} = React.useContext(UserContext);\r\n\r\n    const [currentPage, setCurPage] = React.useState(1);\r\n    const [postPerPage] = React.useState(10);\r\n\r\n    const len = content.length;\r\n\r\n    const indexOfLastPost = currentPage * postPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postPerPage;\r\n\r\n    const postsToDisplay = content.slice(indexOfFirstPost, indexOfLastPost);\r\n    \r\n\r\n    React.useEffect(() => {\r\n        console.log('Todayview Useffect Called!')\r\n        setRegistered(false);\r\n        fetchUserSources();\r\n    },[])\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item>\r\n                <h1>All Feeds</h1>\r\n                <h3 className={classes.heading2}>The insights you need to keep ahead</h3>\r\n                <Grid item>\r\n                    <p className={classes.heading3}>LATEST</p>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <CardView content={postsToDisplay}/>\r\n            <Grid item style={{padding: '0 15vw'}}>\r\n            {content.length > 10? <PaginationButtons totalPosts={len} postsPerPage={postPerPage} setCurPage={setCurPage}/> : <div />}\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TodayView;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\EditFeed.js",["129","130","131"],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\ReadLater.js",["132"],"import { Grid, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport {CardContext} from '../Context/CardContext';\r\nimport BookmarkedCard from './BookmarkedCard';\r\n\r\nconst useStyles = makeStyles({\r\n    heading2: {\r\n        color: '#948479',\r\n        fontSize: 12\r\n    }\r\n})\r\n\r\nfunction ReadLater() {\r\n    const classes = useStyles();\r\n    const {bookmarkedContent, fetchBookmarkedArticles} = React.useContext(CardContext); \r\n    React.useEffect(() => {\r\n        console.log('Bookmarks');\r\n        fetchBookmarkedArticles();\r\n    }, [bookmarkedContent])\r\n    return (\r\n        <div>\r\n            <Grid container direction='column'>\r\n                <Grid item>\r\n                    <p className={classes.heading2}>BOARD</p>\r\n                    <h1>Read Later</h1>\r\n                </Grid>\r\n                <Grid item>\r\n                    <p className={classes.heading2}>LATEST</p>\r\n                </Grid>\r\n                \r\n                <BookmarkedCard content={bookmarkedContent} />\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadLater;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\NavSection.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\FeedCategoryForm.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\AddFeed.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\CardView.js",["133","134","135"],"import { Grid, makeStyles, Avatar, IconButton, Typography} from '@material-ui/core';\r\nimport { Card, CardHeader, CardActions, CardContent } from '@material-ui/core';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport { CardContext } from '../Context/CardContext';\r\n\r\n\r\nimport React from 'react';\r\nimport { FeedContext } from '../Context/FeedContext';\r\nimport { UserContext } from '../Context/UserContext';\r\n\r\nconst useStyles = makeStyles({\r\n    cardRoot: {\r\n        width: 800,\r\n        maxWidth: '100vw',\r\n        marginBottom: 15,\r\n        padding:10\r\n      },\r\n    media: {\r\n        height: 140,\r\n    }\r\n})\r\n\r\nfunction CardView(props) {\r\n    const classes = useStyles();\r\n    const contents = props.content;\r\n    const {fetchArticles, bookmarkClicked, setBookmarkClicked, bookmarkArticle} = React.useContext(CardContext);\r\n    const { userSources } = React.useContext(FeedContext);\r\n    const {setLoginMessage} = React.useContext(UserContext);\r\n\r\n    React.useEffect(() => {\r\n        console.log('Cardview useffect')\r\n        fetchArticles()\r\n        setLoginMessage('')\r\n    }, [userSources])\r\n\r\n    let bookmarkedIdList = []\r\n\r\n    const handleBookmark = (id) => {\r\n        setBookmarkClicked(b => ({...b, [id]:!b.id}))\r\n        bookmarkArticle(id);\r\n    }\r\n    const cardList = contents.map(e => {\r\n        return(\r\n            <Grid item key={e.id}>\r\n                <Card className={classes.cardRoot}>\r\n                    <CardHeader\r\n                        avatar={\r\n                        <Avatar src={e.source.source_logo} variant='rounded' />\r\n                        }\r\n                        title={\r\n                            <Typography style={{fontFamily: 'Roboto', lineHeight: 1.5}} variant='h6'>\r\n                            {e.title}\r\n                            </Typography>}\r\n                        subheader={new Date(e.published_date) + ' | ' + e.source.source_name}\r\n                    />\r\n                    <CardContent dangerouslySetInnerHTML={{__html: e.summary}} \r\n                    style={{padding:10, fontSize: 16, fontFamily: 'Roboto', lineHeight: 1.5, textAlign: 'justify'}}>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton aria-label=\"add to favorites\" onClick={() => {handleBookmark(e.id)}}>\r\n                            {bookmarkClicked[e.id] ? <BookmarkIcon /> : \r\n                            <BookmarkBorderIcon />}\r\n                        </IconButton>\r\n                        <a target=\"_blank\" href={e.link}>\r\n                            <h5>{'Explore full story >>>'}</h5>\r\n                        </a>\r\n                    </CardActions>\r\n                </Card>\r\n            </Grid>\r\n            \r\n        )\r\n    })\r\n\r\n    return (\r\n            <Grid item container spacing={4}>\r\n                {cardList}\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default CardView;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\BookmarkedCard.js",["136","137","138","139"],"import { Grid, makeStyles, Avatar, IconButton, Typography} from '@material-ui/core';\r\nimport { Card, CardHeader, CardActions, CardContent } from '@material-ui/core';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport { CardContext } from '../Context/CardContext';\r\n\r\n\r\nimport React from 'react';\r\nimport { FeedContext } from '../Context/FeedContext';\r\n\r\nconst useStyles = makeStyles({\r\n    cardRoot: {\r\n        width: 800,\r\n        maxWidth: '100vw',\r\n        marginBottom: 25,\r\n      },\r\n    media: {\r\n        height: 140,\r\n    }\r\n})\r\n\r\nfunction BookmarkedCard(props) {\r\n    const classes = useStyles();\r\n    const contents = props.content;\r\n    const {fetchBookmarkedArticles, bookmarkClicked, setBookmarkClicked, unbookmarkArticle} = React.useContext(CardContext);\r\n    const { userSources } = React.useContext(FeedContext);\r\n\r\n    React.useEffect(() => {\r\n        console.log('Cardview useffect')\r\n        fetchBookmarkedArticles()\r\n    }, [bookmarkClicked])\r\n\r\n\r\n\r\n    const handleBookmark = (id) => {\r\n        unbookmarkArticle(id);\r\n\r\n        setBookmarkClicked(bClicked => ({...bClicked, [id]: !bClicked}));\r\n    }\r\n    const cardList = contents.map(e => {\r\n        return(\r\n            <Grid item key={e.id}>\r\n                <Card className={classes.cardRoot}>\r\n                    <CardHeader\r\n                        avatar={\r\n                        <Avatar src={e.article.source.source_logo} variant='rounded' />\r\n                        }\r\n                        title={\r\n                            <Typography style={{fontFamily: 'Roboto', lineHeight: 1.5}} variant='h6'>\r\n                            {e.article.title}\r\n                            </Typography>}\r\n                        subheader={new Date(e.article.published_date) + ' | ' + e.article.source.source_name}\r\n                    />\r\n                    {/* <CardMedia\r\n                        className={classes.media}\r\n                        image={e.image}\r\n                    /> */}\r\n                    <CardContent dangerouslySetInnerHTML={{__html: e.article.summary}}\r\n                    style={{padding:10, fontSize: 16, fontFamily: 'Roboto', lineHeight: 1.5, textAlign: 'justify'}}>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton aria-label=\"add to favorites\" onClick={() => {handleBookmark(e.article.id)}}>\r\n                            <BookmarkIcon />\r\n                        </IconButton>\r\n                        <a target=\"_blank\" href={e.article.link}>\r\n                            <h5>{'Explore full story >>>'}</h5>\r\n                        </a>\r\n                    </CardActions>\r\n                </Card>\r\n            </Grid>\r\n            \r\n        )\r\n    })\r\n\r\n    return (\r\n            <Grid item container spacing={4}>\r\n                {cardList}\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default BookmarkedCard;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\FeedInfoCard.js",["140","141"],"import { Avatar, Grid, Paper, Button, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { FeedContext } from '../Context/FeedContext';\r\nimport FollowPopUp from './FollowPopUp';\r\n\r\nfunction FeedInfoCard(props) {\r\n    const {search} = props;\r\n    const {feedInfo, setFollow, getUserSourcesTitle, unfollowFeed} = React.useContext(FeedContext);\r\n    const feedLength = feedInfo.length;\r\n    \r\n    const titles = getUserSourcesTitle();\r\n    const handleFollow = (e,id) => {\r\n        const f = e.target.outerText.toLowerCase();\r\n        if(f==='follow'){\r\n            setFollow(id);\r\n        }else if(f==='unfollow'){\r\n            unfollowFeed(id);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n         {feedLength !== 0 ?\r\n            (feedInfo.filter(f => {\r\n                if(search === ''){\r\n                    return f;\r\n                }else if(f.title.toLowerCase().includes(search)){\r\n                    return f;\r\n                }\r\n            }).map(feed => {\r\n                return (<Paper variant='outlined' style={{marginTop: 30, width:'40vw', padding:20}} key={feed.id}>\r\n                <Grid container>\r\n                    <Grid item xs={2}>\r\n                        <Avatar variant='rounded' src={feed.logo_link} style={{height: 50, width:50}} />\r\n                    </Grid>\r\n                    <Grid item container direction='column' xs={10}>\r\n                        <Grid item container>\r\n                            <Grid item xs={8}>\r\n                                <Typography variant='h6'>{feed.title}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Button variant='outlined' onClick={(e) => handleFollow(e,feed.id)}> {titles.includes(feed.title)?'Unfollow':'Follow'}</Button>\r\n                                <FollowPopUp />\r\n                            </Grid>\r\n                            \r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <a target='_blank' href= {feed.link}><Typography variant='subtitle2'>{feed.link}</Typography></a>\r\n                        </Grid>\r\n\r\n                        <Grid item style={{marginTop: 20}}>\r\n                            <Typography variant='body2'>{feed.subtitle}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>)\r\n            }))  : (<div />)\r\n        }   \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default FeedInfoCard;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\FollowPopUp.js",["142","143"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { FeedContext } from '../Context/FeedContext';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { InputAdornment, ListItemText} from '@material-ui/core';\r\nimport {withRouter, Link} from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default withRouter(function FollowPopUp(props) {\r\n  const classes = useStyles();\r\n  const {follow, setFollow, feedCategory, followFeed} = React.useContext(FeedContext);\r\n  const [folder, setFolder] = React.useState('');\r\n\r\n  const handleClose = () => {\r\n    setFollow(false);\r\n  };\r\n  React.useEffect(()=>{\r\n    setFollow(false);\r\n    //fetchUserSources();\r\n  }, [])\r\n\r\n  \r\n\r\n  const handleMenuClick = (cat) => {\r\n      console.log(props);\r\n      followFeed(cat);\r\n      handleClose();\r\n\r\n  }\r\n  const handleChange = (e) => {\r\n        const s = e.target.value.toLowerCase();\r\n        setFolder(s);\r\n  }\r\n  \r\n  const menuList = feedCategory.filter(c => {\r\n    if (folder === ''){\r\n      return c;\r\n    }else if(c.toLowerCase().includes(folder)){\r\n      return c;\r\n    }\r\n  }).map(cat => {\r\n      return(\r\n          <MenuItem onClick={() => {handleMenuClick(cat)}} key={cat} style={{padding: '20px 10px'}}>\r\n            {cat}\r\n          </MenuItem>\r\n      )\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={follow} onClose={handleClose}>\r\n        <DialogTitle>Save Feed</DialogTitle>\r\n        <DialogContent>\r\n          <form className={classes.container}>\r\n            <FormControl className={classes.formControl}>\r\n            <Input\r\n                    id=\"search-bar\"\r\n                    startAdornment={\r\n                        <InputAdornment position=\"start\">\r\n                        <SearchIcon />\r\n                        </InputAdornment>\r\n                    }\r\n                    style={{width:'20vw'}}\r\n                    placeholder='Search Feed Folder'\r\n                    onChange={handleChange}\r\n                />\r\n            </FormControl>\r\n          </form>\r\n          {menuList}\r\n          <MenuItem component={Link} to='/createfeed' style={{width: '100%'}}>\r\n                <ListItemText primary=\"Create New Folder\" />\r\n          </MenuItem>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n})\r\n","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\SendEmail.js",["144","145","146","147"],"import React from 'react';\r\nimport { Container, Typography, TextField, Button, Avatar, Grid } from '@material-ui/core';\r\nimport {Redirect } from 'react-router-dom';\r\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\r\nimport {UserContext} from '../Context/UserContext';\r\n\r\nfunction sendLink(email){\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({email: email})\r\n    } \r\n    fetch('http://127.0.0.1:8000/api/account/password_reset/', requestOptions)\r\n        .then(res => res.json() )\r\n        .then(res => console.log(res))\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n    typography:{\r\n      h4: {\r\n        color: 'green',\r\n        fontWeight: 'bold',\r\n        marginBottom: 15\r\n      },\r\n      subtitle2: {\r\n        color: 'gray',\r\n        marginBottom:15\r\n      },\r\n      subtitle1: {\r\n        fontWeight: 'bold',\r\n        marginBottom: 10\r\n        }\r\n    }\r\n    \r\n})\r\n\r\nfunction SendEmail(props) {\r\n    const [email, setEmail] = React.useState();\r\n    const [sent, setSent] = React.useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(email);\r\n        sendLink(email);\r\n        props.history.push('/');\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n        <Container maxWidth='sm' style={{padding:'10vw 10vw'}}>\r\n            <Grid container spacing={2}>\r\n                <Grid item>\r\n                    <Avatar src='/Feeds-Green-icon.png' />\r\n                </Grid>\r\n                <Grid item>\r\n                <Typography variant='h4'>RSS Feed Reader</Typography>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n\r\n            <Grid style={{paddingLeft:60}}>\r\n            <Typography variant='subtitle1'>Enter Email to receive link for changing password.</Typography>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <TextField \r\n                            variant=\"outlined\"\r\n                            color='secondary'\r\n                            label='Email'\r\n                            type='email'\r\n                            placeholder='test@test.com'\r\n                            style={{marginBottom:15}}\r\n                            id='email'\r\n                            onChange={handleChange}\r\n                        />\r\n                        <br />\r\n                        <Button variant='outlined'\r\n                            type='submit' \r\n                            style={{color: 'white', backgroundColor:'green', marginBottom:15}} \r\n                        > \r\n                            Submit \r\n                        </Button>\r\n                    </form>\r\n            </Grid>\r\n       \r\n        </Container>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default SendEmail;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\ResetPassword.js",["148"],"import React from 'react';\r\nimport { Container, Typography, TextField, Button, Avatar, Grid } from '@material-ui/core';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\r\nimport {UserContext} from '../Context/UserContext';\r\n\r\nconst theme = createMuiTheme({\r\n    typography:{\r\n      h4: {\r\n        color: 'green',\r\n        fontWeight: 'bold',\r\n        marginBottom: 15\r\n      },\r\n      subtitle2: {\r\n        color: 'gray',\r\n        marginBottom:15\r\n      },\r\n      subtitle1: {\r\n        fontWeight: 'bold',\r\n        marginBottom: 10\r\n        }\r\n    }\r\n    \r\n})\r\n\r\n\r\n\r\nfunction ResetPassword({location}) {\r\n    const [token, setToken] = React.useState('');\r\n    const [fields, setFields] = React.useState({\r\n        new_password: null,\r\n        new_password2: null\r\n    });\r\n    const [errorMessage, setErrorMessage] = React.useState('');\r\n    const {resetOk, sendForReset} = React.useContext(UserContext);\r\n    React.useEffect(() => {\r\n        const params = new URLSearchParams(location.search);\r\n        const t = params.get('token')\r\n        setToken(t ? t : '');\r\n    }, [])\r\n\r\n    const handleChange = (e) => {\r\n        setFields(prev => ({...prev, [e.target.id]:e.target.value}));\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(fields['new_password'] !== fields['new_password2']){\r\n            setErrorMessage('Password Fields donot match!');\r\n        }else{\r\n            console.log('OK!');\r\n            const rc = {password: fields['new_password'], token: token};\r\n            console.log(rc);\r\n            sendForReset(rc);\r\n        }\r\n    }\r\n    if(resetOk){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n        <Container maxWidth='sm' style={{padding:'10vw 10vw'}}>\r\n            <Grid container spacing={2}>\r\n                <Grid item>\r\n                    <Avatar src='/Feeds-Green-icon.png' />\r\n                </Grid>\r\n                <Grid item>\r\n                <Typography variant='h4'>RSS Feed Reader</Typography>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n\r\n            <Grid style={{paddingLeft:60}}>\r\n            <Typography variant='subtitle1'>Reset Password</Typography>\r\n                    <form onSubmit={handleSubmit} >\r\n                        <TextField \r\n                            variant=\"outlined\"\r\n                            color='secondary'\r\n                            label='New Password'\r\n                            type='password'\r\n                            style={{marginBottom:15}}\r\n                            id='new_password'\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField \r\n                            variant=\"outlined\"\r\n                            color='secondary'\r\n                            label='Confirm New Password'\r\n                            type='password'\r\n                            style={{marginBottom:15}}\r\n                            id='new_password2'\r\n                            onChange={handleChange}\r\n                        />\r\n                        <br />\r\n                        {errorMessage !== '' ? \r\n                            <div>\r\n                            <span style={{color:\"red\"}}>\r\n                                {errorMessage}\r\n                            </span>\r\n                            <br />\r\n                            <br />\r\n                                </div>\r\n                            : <div></div>\r\n                        }\r\n                        <Button variant='outlined'\r\n                            type='submit' \r\n                            style={{color: 'white', backgroundColor:'green', marginBottom:15}} \r\n                        > \r\n                            Reset\r\n                        </Button>\r\n                    </form>\r\n            </Grid>\r\n       \r\n        </Container>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ResetPassword;","E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\PaginationButtons.js",[],"E:\\Side Projects\\MaterialUI-react\\rss-feed-reader\\src\\components\\SourceView.js",["149","150","151","152","153","154","155","156","157"],"import React from 'react';\r\nimport { Grid, makeStyles, Card, CardHeader, Avatar, Typography, CardContent, CardActions, IconButton} from \"@material-ui/core\";\r\nimport { FeedContext } from '../Context/FeedContext';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport PaginationButtons from './PaginationButtons';\r\nimport CardView from './CardView';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    heading2: {\r\n        color: '#948479',\r\n        marginBottom: 20\r\n    },\r\n    heading3: {\r\n        color: '#948479',\r\n        fontSize: 12\r\n    },\r\n    cardRoot: {\r\n        width: 800,\r\n        maxWidth: '100vw',\r\n        marginBottom: 15,\r\n        padding:10\r\n      },\r\n    media: {\r\n        height: 140,\r\n    }\r\n})\r\n\r\n\r\nfunction SourceView(props) {\r\n    console.log(props)\r\n    const source_id = props.match.params.id;\r\n    console.log(source_id);\r\n    const classes = useStyles();\r\n    const {fetchSourceArticle, sourceArticle} = React.useContext(FeedContext);\r\n\r\n    React.useEffect(() => {\r\n        console.log('Called!')\r\n        fetchSourceArticle(source_id);\r\n    }, [source_id])\r\n\r\n    console.log(sourceArticle);\r\n\r\n    const [currentPage, setCurPage] = React.useState(1);\r\n    const [postPerPage] = React.useState(10);\r\n    const len = sourceArticle.length;\r\n\r\n    const indexOfLastPost = currentPage * postPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postPerPage;\r\n\r\n    const content = sourceArticle.length >= postPerPage ? sourceArticle.slice(indexOfFirstPost, indexOfLastPost) : sourceArticle;\r\n\r\n    // const cardList = content.map(e => {\r\n    //     return(\r\n    //         <Grid item key={e.id}>\r\n    //             <Card className={classes.cardRoot}>\r\n    //                 <CardHeader\r\n    //                     avatar={\r\n    //                     <Avatar src={e.source.source_logo} variant='rounded' />\r\n    //                     }\r\n    //                     title={\r\n    //                         <Typography style={{fontFamily: 'Roboto', lineHeight: 1.5}} variant='h6'>\r\n    //                         {e.title}\r\n    //                         </Typography>}\r\n    //                     subheader={new Date(e.published_date) + ' | ' + e.source.source_name}\r\n    //                 />\r\n    //                 <CardContent dangerouslySetInnerHTML={{__html: e.summary}} \r\n    //                 style={{padding:10, fontSize: 16, fontFamily: 'Roboto', lineHeight: 1.5, textAlign: 'justify'}}>\r\n    //                 </CardContent>\r\n    //                 <CardActions disableSpacing>\r\n    //                     <IconButton aria-label=\"add to favorites\">\r\n    //                          <BookmarkBorderIcon />\r\n    //                     </IconButton>\r\n    //                     <a target=\"_blank\" href={e.link}>\r\n    //                         <h5>{'Go to the site >>>'}</h5>\r\n    //                     </a>\r\n    //                 </CardActions>\r\n    //             </Card>\r\n    //         </Grid>\r\n            \r\n    //     )\r\n    // })\r\n    return (\r\n        <Grid container direction='column'>\r\n            <Grid item>\r\n                <h1>{sourceArticle.length?sourceArticle[0].source.source_name:'placeholder'}</h1>\r\n                <h3 className={classes.heading2}>Get all from {sourceArticle.length?sourceArticle[0].source.source_name: 'placeholder'} here!</h3>\r\n                <Grid item>\r\n                    <p className={classes.heading3}>LATEST</p>\r\n                </Grid>\r\n            </Grid>\r\n            <CardView content={content} />\r\n            <Grid item style={{padding: '0 15vw'}}>\r\n             {content.length >= 10? <PaginationButtons totalPosts={len} postsPerPage={postPerPage} setCurPage={setCurPage}/> : <div />}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SourceView;",{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":14,"column":8,"nodeType":"164","messageId":"165","endLine":14,"endColumn":20},{"ruleId":"162","severity":1,"message":"166","line":23,"column":26,"nodeType":"164","messageId":"165","endLine":23,"endColumn":41},{"ruleId":"162","severity":1,"message":"167","line":24,"column":32,"nodeType":"164","messageId":"165","endLine":24,"endColumn":52},{"ruleId":"162","severity":1,"message":"168","line":25,"column":29,"nodeType":"164","messageId":"165","endLine":25,"endColumn":47},{"ruleId":"162","severity":1,"message":"169","line":26,"column":36,"nodeType":"164","messageId":"165","endLine":26,"endColumn":61},{"ruleId":"162","severity":1,"message":"170","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":19},{"ruleId":"162","severity":1,"message":"171","line":15,"column":25,"nodeType":"164","messageId":"165","endLine":15,"endColumn":39},{"ruleId":"172","severity":1,"message":"173","line":45,"column":8,"nodeType":"174","endLine":45,"endColumn":10,"suggestions":"175"},{"ruleId":"172","severity":1,"message":"176","line":18,"column":8,"nodeType":"174","endLine":18,"endColumn":10,"suggestions":"177"},{"ruleId":"162","severity":1,"message":"178","line":7,"column":21,"nodeType":"164","messageId":"165","endLine":7,"endColumn":28},{"ruleId":"172","severity":1,"message":"179","line":41,"column":7,"nodeType":"174","endLine":41,"endColumn":9,"suggestions":"180"},{"ruleId":"162","severity":1,"message":"181","line":1,"column":18,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"182","line":8,"column":68,"nodeType":"164","messageId":"165","endLine":8,"endColumn":84},{"ruleId":"183","severity":1,"message":"184","line":43,"column":75,"nodeType":"185","messageId":"186","endLine":43,"endColumn":77},{"ruleId":"172","severity":1,"message":"187","line":19,"column":8,"nodeType":"174","endLine":19,"endColumn":27,"suggestions":"188"},{"ruleId":"172","severity":1,"message":"189","line":35,"column":8,"nodeType":"174","endLine":35,"endColumn":21,"suggestions":"190"},{"ruleId":"162","severity":1,"message":"191","line":37,"column":9,"nodeType":"164","messageId":"165","endLine":37,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":65,"column":28,"nodeType":"194","endLine":65,"endColumn":43},{"ruleId":"162","severity":1,"message":"195","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":26},{"ruleId":"162","severity":1,"message":"196","line":26,"column":13,"nodeType":"164","messageId":"165","endLine":26,"endColumn":24},{"ruleId":"172","severity":1,"message":"187","line":31,"column":8,"nodeType":"174","endLine":31,"endColumn":25,"suggestions":"197"},{"ruleId":"192","severity":1,"message":"193","line":65,"column":28,"nodeType":"194","endLine":65,"endColumn":43},{"ruleId":"183","severity":1,"message":"184","line":23,"column":32,"nodeType":"185","messageId":"186","endLine":23,"endColumn":34},{"ruleId":"192","severity":1,"message":"193","line":48,"column":32,"nodeType":"194","endLine":48,"endColumn":47},{"ruleId":"172","severity":1,"message":"198","line":39,"column":6,"nodeType":"174","endLine":39,"endColumn":8,"suggestions":"199"},{"ruleId":"183","severity":1,"message":"184","line":54,"column":42,"nodeType":"185","messageId":"186","endLine":54,"endColumn":44},{"ruleId":"162","severity":1,"message":"200","line":3,"column":9,"nodeType":"164","messageId":"165","endLine":3,"endColumn":17},{"ruleId":"162","severity":1,"message":"201","line":5,"column":9,"nodeType":"164","messageId":"165","endLine":5,"endColumn":20},{"ruleId":"162","severity":1,"message":"202","line":40,"column":12,"nodeType":"164","messageId":"165","endLine":40,"endColumn":16},{"ruleId":"162","severity":1,"message":"203","line":40,"column":18,"nodeType":"164","messageId":"165","endLine":40,"endColumn":25},{"ruleId":"172","severity":1,"message":"204","line":40,"column":8,"nodeType":"174","endLine":40,"endColumn":10,"suggestions":"205"},{"ruleId":"162","severity":1,"message":"206","line":2,"column":28,"nodeType":"164","messageId":"165","endLine":2,"endColumn":32},{"ruleId":"162","severity":1,"message":"207","line":2,"column":34,"nodeType":"164","messageId":"165","endLine":2,"endColumn":44},{"ruleId":"162","severity":1,"message":"208","line":2,"column":46,"nodeType":"164","messageId":"165","endLine":2,"endColumn":52},{"ruleId":"162","severity":1,"message":"209","line":2,"column":54,"nodeType":"164","messageId":"165","endLine":2,"endColumn":64},{"ruleId":"162","severity":1,"message":"210","line":2,"column":66,"nodeType":"164","messageId":"165","endLine":2,"endColumn":77},{"ruleId":"162","severity":1,"message":"211","line":2,"column":79,"nodeType":"164","messageId":"165","endLine":2,"endColumn":90},{"ruleId":"162","severity":1,"message":"212","line":2,"column":92,"nodeType":"164","messageId":"165","endLine":2,"endColumn":102},{"ruleId":"162","severity":1,"message":"195","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":26},{"ruleId":"172","severity":1,"message":"213","line":40,"column":8,"nodeType":"174","endLine":40,"endColumn":19,"suggestions":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'PrivateRoute' is defined but never used.","Identifier","unusedVar","'setEmailMessage' is assigned a value but never used.","'setDisplyNameMessage' is assigned a value but never used.","'setPasswordMessage' is assigned a value but never used.","'setConfirmPasswordMessage' is assigned a value but never used.","'CodeSharp' is defined but never used.","'setFolderFeeds' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'loginMessage' and 'setAuth'. Either include them or remove the dependency array.","ArrayExpression",["217"],"React Hook React.useEffect has a missing dependency: 'fetchArticles'. Either include it or remove the dependency array.",["218"],"'Reorder' is defined but never used.","React Hook React.useEffect has missing dependencies: 'fetchUserSources' and 'setRegistered'. Either include them or remove the dependency array.",["219"],"'Divider' is defined but never used.","'fetchUserSources' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook React.useEffect has a missing dependency: 'fetchBookmarkedArticles'. Either include it or remove the dependency array.",["220"],"React Hook React.useEffect has missing dependencies: 'fetchArticles' and 'setLoginMessage'. Either include them or remove the dependency array.",["221"],"'bookmarkedIdList' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'BookmarkBorderIcon' is defined but never used.","'userSources' is assigned a value but never used.",["222"],"React Hook React.useEffect has a missing dependency: 'setFollow'. Either include it or remove the dependency array.",["223"],"'Redirect' is defined but never used.","'UserContext' is defined but never used.","'sent' is assigned a value but never used.","'setSent' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.",["224"],"'Card' is defined but never used.","'CardHeader' is defined but never used.","'Avatar' is defined but never used.","'Typography' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'IconButton' is defined but never used.","React Hook React.useEffect has a missing dependency: 'fetchSourceArticle'. Either include it or remove the dependency array.",["225"],"no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [loginMessage, setAuth]",{"range":"244","text":"245"},"Update the dependencies array to be: [fetchArticles]",{"range":"246","text":"247"},"Update the dependencies array to be: [fetchUserSources, setRegistered]",{"range":"248","text":"249"},"Update the dependencies array to be: [bookmarkedContent, fetchBookmarkedArticles]",{"range":"250","text":"251"},"Update the dependencies array to be: [fetchArticles, setLoginMessage, userSources]",{"range":"252","text":"253"},"Update the dependencies array to be: [bookmarkClicked, fetchBookmarkedArticles]",{"range":"254","text":"255"},"Update the dependencies array to be: [setFollow]",{"range":"256","text":"257"},"Update the dependencies array to be: [location.search]",{"range":"258","text":"259"},"Update the dependencies array to be: [fetchSourceArticle, source_id]",{"range":"260","text":"261"},[1317,1319],"[loginMessage, setAuth]",[531,533],"[fetchArticles]",[1227,1229],"[fetchUserSources, setRegistered]",[552,571],"[bookmarkedContent, fetchBookmarkedArticles]",[1165,1178],"[fetchArticles, setLoginMessage, userSources]",[1027,1044],"[bookmarkClicked, fetchBookmarkedArticles]",[1312,1314],"[setFollow]",[1141,1143],"[location.search]",[1087,1098],"[fetchSourceArticle, source_id]"]